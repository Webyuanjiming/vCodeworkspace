var app = angular.module('MobileAngularUiExamples', [
    'ngRoute',
    'mobile-angular-ui',
    'mobile-angular-ui.components',
    // touch/drag feature: this is from 'mobile-angular-ui.gestures.js'
    // it is at a very beginning stage, so please be careful if you like to use
    // in production. This is intended to provide a flexible, integrated and and
    // easy to use alternative to other 3rd party libs like hammer.js, with the
    // final pourpose to integrate gestures into default ui interactions like
    // opening sidebars, turning switches on/off ..
    'mobile-angular-ui.gestures',
    'mobile-angular-ui.core.sharedState'
]);


var SERVER_ADDRESS = "http://192.168.0.60:8080";


app.config(function($routeProvider) {

    $routeProvider.when('/invest', {
        templateUrl: '/m/jujin/invest.html',
        reloadOnSearch: false,
        controller: 'investController'
    }); //回款记录

    $routeProvider.when('/borrows', {
        templateUrl: '/m/jujin/borrows.html',
        reloadOnSearch: false,
        controller: 'borrowController'
    });

    /*=2016/07/07=*/
    $routeProvider.when('/repayment', {
        templateUrl: '/m/jujin/repayment.html',
        reloadOnSearch: false,
        controller: 'repaymentController'
    });

    $routeProvider.when('/borrowinfo', {
        templateUrl: '/m/jujin/borrowinfo.html',
        reloadOnSearch: false,
        controller: 'borrowinfoController'
    });

    //-2016/07/11-
    $routeProvider.when('/counter', {
        templateUrl: '/m/jujin/counter.html',
        reloadOnSearch: false,
        controller: 'counterController'
    });

    $routeProvider.when('/invite', {
        //templateUrl: '/m/jujin/invite.html',
		templateUrl: '/m/jujin/invitem.html',
        reloadOnSearch: false,
        controller: 'inviteController'
    });
    $routeProvider.when('/myInvite', {
        templateUrl: '/m/jujin/invite2.html',
        reloadOnSearch: false,
        controller: 'inviteController'
    });

    $routeProvider.when('/login', {
        templateUrl: '/m/jujin/login.html',
        reloadOnSearch: false,
        controller: 'loginController'
    });
    $routeProvider.when('/register', {
        templateUrl: '/m/jujin/register.html',
        reloadOnSearch: false,
        controller: 'registerController'
    });
    $routeProvider.when('/message', {
        templateUrl: '/m/jujin/message.html',
        reloadOnSearch: false,
        controller: 'messageController'
    });

    $routeProvider.when('/recharge', {
        templateUrl: '/m/jujin/recharge.html',
        reloadOnSearch: false,
        controller: 'rechargeController'
    }); //充值界面
    $routeProvider.when('/withdraw', {
        templateUrl: '/m/jujin/withdraw.html',
        reloadOnSearch: false,
        controller: 'withdrawController'
    }); //提现
    $routeProvider.when('/recove', {
        templateUrl: '/m/jujin/recove.html',
        reloadOnSearch: false,
        controller: 'recoveController'
    }); //房产抵押
    $routeProvider.when('/bankcard', {
        templateUrl: '/m/jujin/bankcard.html',
        reloadOnSearch: false,
        controller: 'bankcardController'
    }); //绑定银行卡

    $routeProvider.when('/calc', {
        templateUrl: '/m/jujin/calc.html',
        reloadOnSearch: false,
        controller: 'calcController'
    });
    $routeProvider.when('/line', {
        templateUrl: '/m/jujin/line.html',
        reloadOnSearch: false,
        controller: 'interestSummaryController'
    });
    $routeProvider.when('/friendsrank', {
        templateUrl: '/m/jujin/friendsrank.html',
        reloadOnSearch: false,
        controller: 'friendRankController'
    });
    $routeProvider.when('/accountlog', {
        templateUrl: '/m/jujin/accountlog.html',
        reloadOnSearch: false,
        controller: 'AccountLogController'
    }); //收支记录

    $routeProvider.when('/attest', {
        templateUrl: '/m/jujin/attest.html',
        reloadOnSearch: false,
        controller: 'AttestController'
    }); //实名认证
    $routeProvider.when('/awardinfo', {
        templateUrl: '/m/jujin/awardinfo.html',
        reloadOnSearch: false,
        controller: 'AwardInfoController'
    });
    $routeProvider.when('/more', {
        templateUrl: '/m/jujin/more.html',
        reloadOnSearch: false
    });

    $routeProvider.when('/changepsw', {
        templateUrl: '/m/jujin/changepsw.html',
        reloadOnSearch: false,
        controller: 'changepswController'
    }); //修改密码
    $routeProvider.when('/findpsw', {
        templateUrl: '/m/jujin/findpsw.html',
        reloadOnSearch: false,
        controller: 'findpswCtrl'
    }); //密码找回

    $routeProvider.when('/payrecord', {
        templateUrl: '/m/jujin/payrecord.html',
        reloadOnSearch: false,
        controller: 'payrecordController'
    }); //交易记录
    $routeProvider.when('/bindbc', {
        templateUrl: '/m/jujin/bindbc.html',
        reloadOnSearch: false,
        controller: 'bindbcCtrl'
    }); //银行卡绑定
    $routeProvider.when('/banklist', {
        templateUrl: '/m/jujin/banklist.html',
        reloadOnSearch: false,
        controller: 'banklistCtrl'
    }); //绑定银行卡列表
    $routeProvider.when('/selectbank', {
        templateUrl: '/m/jujin/selectbank.html',
        reloadOnSearch: false,
        controller: 'banklistCtrl'
    }); //选择银行卡列表
    $routeProvider.when('/confrec', {
        templateUrl: '/m/jujin/confrec.html',
        reloadOnSearch: false,
        controller: 'confrecCtrl'
    }); //确认充值

    $routeProvider.when('/ticket', {
        templateUrl: '/m/jujin/ticket.html',
        reloadOnSearch: false,
        controller: 'ticketCtrl'
    }); //聚金券列表
    $routeProvider.when('/setaccount', {
        templateUrl: '/m/jujin/setaccount.html',
        reloadOnSearch: false,
        controller: 'setaccCtrl'
    }); //账号设置

    $routeProvider.when('/contactus', {
        templateUrl: '/m/jujin/contactus.html',
        reloadOnSearch: false
    }); //联系我们
    $routeProvider.when('/questions', {
        templateUrl: '/m/jujin/questions.html',
        reloadOnSearch: false
    }); //常见问题

    $routeProvider.when('/myaward', {
        templateUrl: '/m/jujin/myaward.html',
        reloadOnSearch: false,
        controller: 'myawardCtrl'
    }); //我的奖券
    $routeProvider.when('/myreds', {
        templateUrl: '/m/jujin/myreds.html',
        reloadOnSearch: false,
        controller: 'myredsCtrl'
    }); //我的红包
    $routeProvider.when('/reddesc', {
        templateUrl: '/m/jujin/reddesc.html',
        reloadOnSearch: false,
        controller: 'reddescCtrl'
    }); //红包详情

    $routeProvider.when('/chance', {
        templateUrl: '/m/jujin/chance.html',
        reloadOnSearch: false,
        controller: 'chanceController'
    }); //红包组详情
    $routeProvider.when('/chancedesc', {
        templateUrl: '/m/jujin/chancedesc.html',
        reloadOnSearch: false,
        controller: 'chancedescController'
    }); //红包组详情

    $routeProvider.when('/', {
        templateUrl: '/m/jujin/wkindex.html',
		//templateUrl: '/m/jujin/wkhome.html',
        reloadOnSearch: false,
        controller: 'WkIndexController'
    }); //新版导航页详情

    $routeProvider.when('/default', {
        templateUrl: '/m/jujin/account/waccount.html',
        reloadOnSearch: false,
        controller: 'waccountController'
    }); //新版导航页详情


    $routeProvider.when('/interest', {
        templateUrl: '/m/jujin/interest/interest.html',
        reloadOnSearch: false,
        controller: 'InterestController'
    }); //余额生息
    $routeProvider.when('/interestdetail', {
        templateUrl: '/m/jujin/interest/interestdetail.html',
        reloadOnSearch: false,
        controller: 'InterestController'
    }); //余额生息页详情


    $routeProvider.when('/jujinbao', {
        templateUrl: '/m/jujin/interest/jujinbao.html',
        reloadOnSearch: false,
        controller: 'JuJinBaoController'
    }); //聚金宝生息
    $routeProvider.when('/jujinbaodetail', {
        templateUrl: '/m/jujin/interest/jujinbaodetail.html',
        reloadOnSearch: false,
        controller: 'JuJinBaoController'
    }); //聚金宝详情
    $routeProvider.when('/wml', {
        templateUrl: '/m/jujin/landing/wml/index.html',
        reloadOnSearch: false,
        controller: 'registerController'
    }); //挖米啦

    $routeProvider.when('/landing.html', {
        templateUrl: '/m/jujin/landing/index.html',
        reloadOnSearch: false,
        controller: 'registerController'
    }); //推广页面
    $routeProvider.when('/med', {
        templateUrl: '/m/jujin/landing/index.html',
        reloadOnSearch: false,
        controller: 'registerController'
    }); //推广页面

    //2015/12/29
    $routeProvider.when('/meder', {
        templateUrl: '/m/jujin/landing/benefits.html',
        reloadOnSearch: false,
        controller: 'registerController'
    }); //推广页面
    //2016/1/15
    $routeProvider.when('/tsou', {
        templateUrl: '/m/jujin/landing/ymts.html',
        reloadOnSearch: false,
        controller: 'registerController'
    }); //推广页面

    /*--20160310--*/
    $routeProvider.when('/own', {
        templateUrl: '/m/jujin/landing/own.html',
        reloadOnSearch: false,
        controller: 'registerController'
    }); //页面


    $routeProvider.when('/auto', {
        templateUrl: '/m/jujin/invest/auto.html',
        reloadOnSearch: false,
        controller: 'AutoInvestController'
    }); //自动投标

    $routeProvider.when('/accountinfo', {
        templateUrl: '/m/jujin/account/accountinfo.html',
        reloadOnSearch: false,
        controller: 'AccountInfoController'
    });

    //账户设置
    $routeProvider.when('/accountset', {
        templateUrl: '/m/jujin/account/accountset.html',
        reloadOnSearch: false,
        controller: 'AccountSetController'
    });

    $routeProvider.when('/investinfo', {
        templateUrl: '/m/jujin/invest/investinfo.html',
        reloadOnSearch: false,
        controller: 'InvestinfoController'
    });

    $routeProvider.when('/setting', {
        templateUrl: '/m/jujin/setting/setting.html',
        reloadOnSearch: false,
        controller: ''
    });

    $routeProvider.when('/activityinfo', {
        templateUrl: '/m/jujin/activity/activityinfo.html',
        reloadOnSearch: false,
        controller: ''
    }).when('/xgmed', {
        templateUrl: '/m/jujin/xgmed.html',
        reloadOnSearch: false,
        controller: 'XgMedController'
    }).when('/xglcdisbor', {
        templateUrl: '/m/jujin/xgdisbor.html',
        reloadOnSearch: false,
        controller: 'XgDisBorController'
    }).when('/xglctran', {
        templateUrl: '/m/jujin/xgtran.html',
        reloadOnSearch: false,
        controller: 'XgTranController'
    }).when('/xglctranbuy', {
        templateUrl: '/m/jujin/xgtranbuy.html',
        reloadOnSearch: false,
        controller: 'XgTranBuyController'
    }).when('/xglcreg', {
        templateUrl: '/m/jujin/landing/xglc/index.html',
        reloadOnSearch: false,
        controller: 'registerController'
    });

    $routeProvider.when('/tzjbind', {
        templateUrl: '/m/tzj/tzjbind.html',
        reloadOnSearch: false,
        controller: 'TzjBindController'
    });
    
    $routeProvider.when('/tzjeditbind', {
        templateUrl: '/m/tzj/tzjeditbind.html',
        reloadOnSearch: false,
        controller: 'TzjEditBindController'
    });


    $routeProvider.when('/borrowmed', {
        templateUrl: '/m/tzj/borrowmed.html',
        reloadOnSearch: false,
        controller: 'BorrowMedController'
    });

    //服务中心
    $routeProvider.when('/service', {
        templateUrl: '/m/sc/sc.html',
        reloadOnSearch: false
    });
});


app.run(function($transform, $rootScope) {
    window.$transform = $transform;
    $rootScope.pageSize = 5;

    $rootScope.SERVER = SERVER_ADDRESS;
    $rootScope.URL_ROOT = $rootScope.SERVER + "/api"; //全局地址
    $rootScope.ROOT = $rootScope.SERVER + "/m/jujin/";

    $rootScope.IS_LOGIN = false;
    $rootScope.RETURN = ""; //登录后跳转的页面

    $rootScope.getBorrowStyle = function(status) {
        //状态集合
        var statusMap = {
            "2": "inprogress",//还款中
            //"3": "done",//已还完
            "8": "inbid" //筹款中
        }
        //返回对应值，默认为筹款中
        return statusMap[status] || "inbid";//筹款中
    }
});

/**
   函数名：AccountInfo
   参数：
   说明：用户中心数据共享

   **/
app.factory('AccountInfo', function() {
    return {
        data: {}
    };
});

/*
   函数名：GlobalBorrowInfo
   参数：
   说明：用户先进标的详情，然后跳转至其他页面
*/
app.factory('GlobalBorrowInfo', function() {
    return {
        data: {},
        borrowId: null
    };
});

//20160525通用服务
app.factory("commonService",["$http","$q","$rootScope",function($http,$q,$rootScope){
    var service = {};
    //默认配置信息
    var defaultConfig = {
        SERVER: SERVER_ADDRESS,
        URL_ROOT: SERVER_ADDRESS + "/api",
        ROOT: SERVER_ADDRESS + "/m/jujin/",
        IS_LOGIN: false,
        PAGE_SIZE: 5,
        RETURN: "" //登录后跳转的页面
    };
    //统一处理错误信息
    service.loadAction = function(config,$scope){
        var deferred = $q.defer(),
            promise = deferred.promise;

        if(config == undefined || config.url == undefined){
            return false;
        }
        //默认使用GET方式
        config.method = config.method || "GET";
        $rootScope.loading = true;
        //获取数据
        $http(config).success(function(data){
            deferred.resolve(data);
        })
        .error(function(error){
            deferred.reject(error);
        });
        //成功
        promise.success = function(sucsCall){
            promise.then(function(data) {
                if (checkResponse($rootScope, $scope, data)) {
                    if(sucsCall && typeof sucsCall == "function"){
                        sucsCall(data);
                    }
                }
            });
        },
        //失败
        promise.error = function(errorCall){
            promise.then(null ,function(data) {
                if(checkResponse($rootScope, $scope, data)){
                    if(errorCall && typeof errorCall == "function"){
                        errorCall(data);
                    }
                }
            });
        };
        return promise;
    }
    //加上分页默认参数
    service.loadPageAction = function(config,$scope){
        if(config == undefined || config.url == undefined){
            return false;
        }
        //默认参数
        var httpConfig = {
            params:{
                ps: defaultConfig.PAGE_SIZE,//每页条数
                pi: 1//第几页
            }
        }
        config.params = angular.extend(httpConfig.params,config.params);
        //获取数据
        return service.loadAction(config,$scope);
    }
    //加载记录---返回HttpPromise
    service.loadRecord = function(config){
        if(config == undefined || config.url == undefined){
            return false;
        }
        //默认使用GET方式
        config.method = config.method || "GET";
        $rootScope.loading = true;
        //获取数据
        return $http(config);
    }
    //加载分页记录---返回HttpPromise
    service.loadPageRecord = function(config){
        if(config == undefined || config.url == undefined){
            return false;
        }
        //默认参数
        var httpConfig = {
            params:{
                ps: defaultConfig.PAGE_SIZE,//每页条数
                pi: 1//第几页
            }
        }
        config.params = angular.extend(httpConfig.params,config.params);
        //获取数据
        return service.loadRecord(config);
    }
    //生成记录信息
    service.genRecord = function(httpConfig,$scope,recordConfig,rowhandler,args){
        //默认参数
        var commConfig = {
            proName: "records",
            totalPage : "totalPageCount"
        }
        recordConfig = angular.extend(commConfig,recordConfig);
        service.loadPageAction(httpConfig,$scope).success(function(response){
            $scope[recordConfig.totalPage] = response.pageCount;
            var list = response.list;
            if (isEmpty($scope[recordConfig.proName])) {
                if(!isEmpty(rowhandler) && typeof(rowhandler) == 'function'){
                    $scope[recordConfig.proName] = [];
                    list.forEach(function(item, index, array) {
                        $scope[recordConfig.proName].push(rowhandler(item,args));
                    });
                }else{
                    $scope[recordConfig.proName] = list;
                }
            } else if (!isEmpty(list) && Array.isArray(list) && list.length > 0){
                if(!isEmpty(rowhandler) && typeof(rowhandler) == 'function'){
                    list.forEach(function(item, index, array) {
                        $scope[recordConfig.proName].push(rowhandler(item,args));
                    });
                }else{
                    $scope[recordConfig.proName] = $scope[recordConfig.proName].concat(list);
                }
            }
        });
    }
    //更多记录
    service.loadMore = function(httpConfig,$scope,recordConfig,rowhandler,args){
        //默认参数
        var commConfig = {
            proName: "records",
            totalPage : "totalPageCount",
            currentPage: "currentPage"
        }
        recordConfig = angular.extend(commConfig,recordConfig);
        if ($scope[commConfig.currentPage] < $scope[commConfig.totalPage]) {
            $scope[commConfig.currentPage] = $scope[commConfig.currentPage] + 1;
            //请求第几页
            httpConfig.params.pi = $scope[commConfig.currentPage];
            service.genRecord(httpConfig,$scope,recordConfig,rowhandler,args);
        }
    }
    return service;
}]);

app.factory('baseService', ['$location', '$rootScope', '$http', '$sce', function($location, $rootScope, $http, $sce) {


    var service = {};
    var config = {
        SERVER: SERVER_ADDRESS,
        URL_ROOT: SERVER_ADDRESS + "/api",
        ROOT: SERVER_ADDRESS + "/m/jujin/",
        IS_LOGIN: false,
        PAGE_SIZE: 5,
        RETURN: "" //登录后跳转的页面
    };
    /**
    函数名：makeUrl
    参数：
        serviceName：服务名(包含get的参数，单独拉出来反倒不直观，合在一起，就这么定了!^_^)
        pi：请求的页数
        ps：当前页数
    说明：从服务器取出集合数据放在$scope中对应的属性中

    **/
    service.makeUrl = function(serviceName, pi, ps) {

        var url = config.URL_ROOT + serviceName;

        if (!isEmpty(pi)) {
            if (serviceName.indexOf("?") == -1) {
                url += "?pi=" + pi;
            } else {
                url += "&pi=" + pi;
            }

            if (!isEmpty(ps)) {
                url += "&ps=" + ps;
            } else {
                url += "&ps=" + config.PAGE_SIZE;
            }
        }
        return url;
    }

    service.getConfig = function() {
            return config;
        }
        /**
        函数名：loadEntities
        参数：
            $scope：Controller函数
            proName：$scope中属性名等价于$scope.messages,$scope.rows
            rowhandler:是否需要对每条数据进行格式转换和处理
            handler:对结果集转换函数
        说明：从服务器取出集合数据放在$scope中对应的属性中

        **/
        service.loadEntities = function(url, $scope, proName, rowhandler, handler) {
            $rootScope.loading = true;
            $http.get(url).success(function(response) {
                if (checkResponse($rootScope, $scope, response)) {
                    if (isEmpty($scope)) return;
                    var list = response.list;
                    if (isEmpty($scope[proName]) || !Array.isArray($scope[proName])) {
                        $scope[proName] = [];
                    }
                    //20160511如果不需要数据格式转换和处理的话，是不是可以不用遍历了？？？判断要写在外面比较好吧
                    /*list.forEach(function(item, index, array) {
                        $scope[proName].push(!isEmpty(rowhandler) && typeof(rowhandler) == 'function' ? rowhandler(item) : item);
                    });*/

                    if(!isEmpty(rowhandler) && typeof(rowhandler) == 'function'){
                        list.forEach(function(item, index, array) {
                            $scope[proName].push(rowhandler(item));
                        });
                    }else{
                        $scope[proName] = $scope[proName].concat(list);
                    }
                    if (!isEmpty(handler) && typeof(handler) == 'function') {
                        handler(response);
                    }
                }
            }).error(function(response, status, headers, config) {
                checkResponse($rootScope, $scope, response);
                //TODO:LOG ERROR
            });
        }
        /**
        函数名：loadEntity
        参数：
            $scope：Controller函数
            proName：$scope中属性名等价于$scope.messages,$scope.rows
            handler:是否需要对每条数据进行格式转换和处理
        说明：从服务器取出对象放在$scope中

        **/
    service.loadEntity = function(url, $scope, proName, handler) {
        $rootScope.loading = true;
        $http.get(url).success(function(response) {

            if (checkResponse($rootScope, $scope, response)) {
                if (isEmpty($scope)) return;
                var entity = response.entity;
                $scope[proName] = entity;

                if (!isEmpty(handler) && typeof(handler) == 'function') {
                    handler(response);
                }

            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
            //TODO:LOG ERROR
        });
    }

    /**
    函数名：loadMore
    参数：
        $scope：Controller函数
        serviceName:该集合对应的服务名
        proName：$scope中属性名等价于$scope.messages,$scope.rows
        pageSize：每页呈现的数据，如不传默认为Config.PAGE_SIZE
        rowHandler:是否需要对每条数据进行格式转换和处理
        handler:对整个结果集处理
    说明：翻页页面使用从服务器取出集合数据放在$scope中对应的属性中

    **/
    service.loadMore = function($scope, serviceName, proName, pageSize, rowHandler, handler) {
        if ($scope.currentPage < $scope.totalPageCount) {
            $scope.currentPage = $scope.currentPage + 1;
            var url = service.makeUrl(serviceName, $scope.currentPage, pageSize);

            service.loadEntities(url, $scope, proName, rowHandler, handler);
        }
    }

    /**
           函数名：initValue
           参数：
               $scope：Controller函数
           说明：确保当前控制器得到正确的初始化(如清除上次执行消息，当前页面得到正确设置)

           **/
    service.initValue = function($scope, handler) {
        setDefaultValue($scope);
        if (handler && typeof(handler) == 'function') {
            handler();
        }
    }

    /**
    函数名：clone
    参数：
        url:
    说明：对象的深克隆
    **/
    service.clone = function clone(o) {
        var k, ret = o,
            b;
        if (o && ((b = (o instanceof Array)) || o instanceof Object)) {
            ret = b ? [] : {};
            for (k in o) {
                if (o.hasOwnProperty(k)) {
                    ret[k] = clone(o[k]);
                }
            }
        }
        return ret;
    }

    /**
     函数名：execAction
     参数：
         url:
     说明：执行一个简单的请求，然后执行回调函数
     注意：请求返回的内容始终在是第一个参数

     **/
    service.execAction = function($scope, url, handler, args) {
        $rootScope.loading = true;
        $http.get(url).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {
                //response 始终会在第一位
                if (!isEmpty(handler) && typeof(handler) == 'function') {
                    if (isEmpty(args)) {
                        handler(response);
                    } else if (!Array.isArray(args)) {
                        handler(response, args);
                    } else {
                        args.unshift(response);
                        handler(args);
                    }
                }
            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
            //TODO:LOG ERROR
        });
    }

    service.postAction = function($scope, url, handler, args) {

        $rootScope.loading = true;
        $http.post(url, args).success(function(data, status) {

            if (checkResponse($rootScope, $scope, data)) {
                if (handler && typeof(handler) == 'function') {
                    handler(data, status);
                }
            }
        }).error(function(data, status) {
            checkResponse($rootScope, $scope, data);
        });
    }
    return service;

}]);

/***************************************************************************
# Author: wangning <wangning@jujinziben.com>
# Created Date: 2015-12-23
# Latest Update:
# Description:
#
# Revision:
#TODO:
#
#***************************************************************************/
app.controller('borrowController', ['$rootScope', '$scope', '$routeParams', 'commonService',
    function($rootScope, $scope, $routeParams, service) {
        //初始化参数
        setDefaultValue($scope, $rootScope);
        //产品类型
        $scope.type = $routeParams.type || 2;

        //产品信息参数
        var borrowConfig = {
            url : $rootScope.URL_ROOT + "/borrow?id=" + $scope.type
        };
        //生成记录信息--加载列表
        service.genRecord(borrowConfig,$scope,{
            proName: "type_borrows"
        });
        //加载更多
        $scope.loadMore = function() {
            service.loadMore(borrowConfig,$scope,{
                proName: "type_borrows"
            });
        };
    }
]);

/*-加载用户账户信息-2016/06/27写-*/

/*--6.27改--*/
app.service("loadInfoService",['$http','$rootScope',function($http,$rootScope){
    var service = {};
    $rootScope.loading = true;
    service.loadBorrowAccountInfo = function($rootScope,$scope,$http,url){
        $http.get(url).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {
                if (!isEmpty(response.entity) && !isEmpty(response.entity.borrow))
                    $scope.borrow = response.entity.borrow;

                if (!isEmpty(response.entity) && !isEmpty(response.entity.account)) {
                    $scope.account = response.entity.account;
                    $scope.account.coin = convertToFloat($scope.account.coin).toFixed(2);
                }
            }

        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
        });

        //加载聚金券下拉框
        var ticketUrl = $rootScope.URL_ROOT + '/ticket?type=0&pi=1&ps=60';

        var emptyTicket = {};
        emptyTicket.ticketId = "";
        emptyTicket.name = "请选择可用聚金券";

        $http.get(ticketUrl).success(function(responseData) {
            if (responseData.list) {

                if (responseData.list.length == 0)
                    $scope.list = {};
                else
                    $scope.list = responseData.list;
            };
            if (!isEmpty($scope.list) && Array.isArray($scope.list) && $scope.list.length > 0) {
                $scope.list.unshift(emptyTicket);
            }
        });
    }
    /*-2016/06/28-modify-封装函数-用service--*/
    service.ShowJujinBiInfo = function(coin, vouRate, borrowAccountWait) {
        if (isEmpty(coin) || isEmpty(vouRate)) {
            return "";
        }
        var tenderValue = convertToFloat($("#amount").val());
        if (tenderValue > convertToFloat(borrowAccountWait)) {
            $("#amount").val(borrowAccountWait);
        }
        tenderValue = convertToFloat($("#amount").val());
        //不用上面去的值是在超过可投金额时按照可投金额计算
        var maxUseCoin = (tenderValue * vouRate).toFixed(2);
        if (maxUseCoin > coin) {
            maxUseCoin = coin;
        }
        var useCoinValue = maxUseCoin;
        var msg = "使用" + useCoinValue + "元聚金币抵扣(为您节省)￥" + useCoinValue + "元";
        $("#labjujininfo").text(msg);
    }

    return service;
}]);

function loadBorrowAccountInfo($http, $rootScope, $scope, url) {
    $http.get(url).success(function(response) {
        if (checkResponse($rootScope, $scope, response)) {
            if (!isEmpty(response.entity) && !isEmpty(response.entity.borrow))
                $scope.borrow = response.entity.borrow;

            var attestRows = [];
            //转换认证资料
            var attestion = $scope.borrow.attestion;
            if (!isEmpty(attestion)) {
                var attestType = attestion.attestType;

                if (!isEmpty(attestType)) {
                    var row = [];
                    attestRows.push(row);
                    for (var index = 0; index < attestType.length; index++) {
                        if (index % 2 == 0) {

                            if (row.length > 0) {
                                row = [];
                                attestRows.push(row);
                            }

                        }
                        row.push(attestType[index]);
                    }
                }
            }
            $scope.borrow.attestRows = attestRows;

            if (!isEmpty(response.entity) && !isEmpty(response.entity.account)) {
                $scope.account = response.entity.account;
                $scope.account.coin = convertToFloat($scope.account.coin).toFixed(2);
            }
	    //风险信息
            $scope.attests=attestion.attestType;
            var len=$scope.attests.length;
            var i=0;
            for(len;i<len;i++){
                var anr=$scope.attests[i];
                var attestationCd = anr.attestationCd;
                anr["files"] = response.entity.borrow.attestion.attestFiles[attestationCd];
            }
        }

    }).error(function(response, status, headers, config) {
        checkResponse($rootScope, $scope, response);
    });

    //加载聚金券下拉框
    var ticketUrl = $rootScope.URL_ROOT + '/ticket?type=0&pi=1&ps=60';

    var emptyTicket = {};
    emptyTicket.ticketId = "";
    emptyTicket.name = "请选择可用聚金券";

    $http.get(ticketUrl).success(function(responseData) {
        if (responseData.list) {

            if (responseData.list.length == 0)
                $scope.list = {};
            else
                $scope.list = responseData.list;
        };
        if (!isEmpty($scope.list) && Array.isArray($scope.list) && $scope.list.length > 0) {
            $scope.list.unshift(emptyTicket);
        }
    });
}
function ShowJujinBiInfo(coin, vouRate, borrowAccountWait) {
    if (isEmpty(coin) || isEmpty(vouRate)) {
        return "";
    }
    var tenderValue = convertToFloat($("#amount").val());
    if (tenderValue > convertToFloat(borrowAccountWait)) {
        $("#amount").val(borrowAccountWait);
    }
    tenderValue = convertToFloat($("#amount").val());
    //不用上面去的值是在超过可投金额时按照可投金额计算
    var maxUseCoin = (tenderValue * vouRate).toFixed(2);
    if (maxUseCoin > coin) {
        maxUseCoin = coin;
    }
    var useCoinValue = maxUseCoin;
    var msg = "使用" + useCoinValue + "元聚金币抵扣(为您节省)￥" + useCoinValue + "元";
    $("#labjujininfo").text(msg);
}
//指令/2016/07/15图片显示指令-borrowinfo
app.directive("imglistShow",function(){
    return {
        restrict: "A",
        scope:{
            listinfo: "="
        },
        link: function(scope,element,attrs){
            var listInfo = scope.listinfo;
            var formatInfo = [];
            for(var i=0;i<listInfo.length;i++){
                formatInfo[i] = { href:listInfo[i]};
            }
            $(element).click(function(e){
                e.preventDefault();
                $.swipebox(formatInfo);
            });
        }
    }
});
//标的详情
app.controller('borrowinfoController', ['$rootScope', '$scope', '$http', '$routeParams','commonService', 'GlobalBorrowInfo',
    function($rootScope, $scope, $http, $routeParams, service, borrowCache) {

        if (!isEmpty($routeParams.returnUrl)) {
            $scope.returnUrl = $routeParams.returnUrl;
        }

        $scope.isEventBind = false;

        if (isEmpty($scope.tendStatus)) {
            $scope.tendStatus = "尚未投资";
        }

        setDefaultValue($scope, $rootScope);

        var borrowId = $routeParams.id;

        if (!isEmpty(borrowCache)) {
            if (!isEmpty(localStorage)) {
                localStorage.setItem("CHANNEL_BORROWID", borrowId);
            }
            borrowCache.borrowId = borrowId;
        }

        var url = $rootScope.URL_ROOT + "/borrowinfo?id=" + borrowId;

        $scope.tendSuccess = false;

        if (isEmpty($scope.record_current)) {
            $scope.record_current = 1;
            $scope.record_totalPage = 1;
        }

        //投标记录
        var tenderConfig = {
            url : $rootScope.URL_ROOT + "/tender",
            params: {
                id : borrowId
            }
        };
        //2016/07/14 ===不同标的产品介绍
        // $scope.getType = function(type) {
        //     //状态集合
        //     var typeMap = {
        //         "2": "car-product",//车贷
        //         "8": "fcdy-product",//房贷
        //         "14": "sbd-product",//三板贷
        //         "15": "apple-product",//苹果贷
        //         "11": "cfq-product"//车分期
        //     }
        //     //返回对应值
        //     return typeMap[type];
        // }
        //查看详细信息
        $scope.viewDetailInfo = function(){
            $(".jm-for").slideUp();
            $(".for0-list").show();
            $("#jx-fr").fadeOut(1000);
        }
        //返回列表
        $scope.backList = function(){
            $(".jm-for").slideDown();
            $(".for0-list").hide();
            $("#jx-fr").fadeIn(1000);
            $("#investConfirm").hide();
        }
        //展开折叠
        $scope.fold = function(){
            $(".fold-none").toggleClass("fold-n");
            $("#fold").toggleClass("fold-img").toggleClass("fold-imx");
        }
        //投资确认页面
        $scope.viewCunstomInfo = function(){
            $(".jm-for").slideUp();
            $("#investConfirm").show();
            $("#jx-fr").hide();
        }
        //加载投资记录
        $scope.loadRecord = function() {
            //若未加载过就加载数据
            if (isEmpty($scope.records)) {
                service.genRecord(tenderConfig,$scope);
            }
        }
        //加载更多投资记录
        $scope.loadTenderRecordMore = function() {
            service.loadMore(tenderConfig,$scope,{
                currentPage: "record_current",
                totalPage: "record_totalPage"
            });
        }

        //全投
        $scope.setAll = function() {
            if (!isEmpty($scope.account)) {
                var wait = angular.element(document.getElementById("borrowAccountWait")).text();
                try {
                    var totalAmount = convertToFloat($scope.account.balance) + convertToFloat($scope.account.continueTotal);
                    var amountElement = angular.element(document.getElementById("amount"));

                    if (convertToFloat(wait) > convertToFloat(totalAmount)) {
                        amountElement.val(totalAmount);
                    } else {
                        amountElement.val(wait);
                    }
                    ShowJujinBiInfo(convertToFloat($scope.account.coin), convertToFloat($scope.borrow.vouchersRate), $scope.borrow.borrowAccountWait);
                } catch (e) {
                    //alert(e);
                }
            }
        }
        //确定投资
        $scope.invest = function() {
            //数据校验
            if (!isEmpty($scope.borrow)) {

                var btn = document.getElementById("btnInvest");
                var btnElement = angular.element(btn);
                btnElement.attr("disabled", "true");
                btnElement.css("background-color", "gray");

                var investEntity = {};

                if (!isEmpty($routeParams) && $routeParams.channel == "xglc") {
                    investEntity.isXglc = "1";
                }

                var tenAccount = convertToFloat(angular.element(document.getElementById("amount")).val());
                var directPwd = angular.element(document.getElementById("directPwd")).val();
                var useCoin = 0;
                if (!isEmpty($scope.account.coin) && !isEmpty($scope.borrow.vouchersRate)) {
                    coin = tenAccount * convertToFloat($scope.borrow.vouchersRate);
                    if (coin > $scope.account.coin) {
                        coin = $scope.account.coin;
                    }
                    $scope.coin = coin;
                }

                investEntity.borrowId = $scope.borrow.borrowId;
                if (!isEmpty(tenAccount)) {
                    investEntity.tenderAccount = tenAccount;
                }
                if (!isEmpty(directPwd)) {
                    investEntity.directionalPWD = directPwd;
                }
                if ($scope.borrow.directionalPwd && isEmpty(directPwd)) {
                    $rootScope.Ui.turnOn('showinfo');
                    $scope.msg = "请输入定向密码";
                    $scope.title = "定向密码";
                    return;
                }
                //聚金券
                var ticketId = $("#ticketId").val();
                if (ticketId == '0') {
                    investEntity.ticketId = null;
                } else {
                    investEntity.ticketId = ticketId;
                }
                if (!isEmpty($scope.coin) && $scope.coin > 0) {
                    investEntity.coin = $scope.coin;
                }

                //数据校验
                if (!isEmpty(investEntity.tenderAccount)) {

                    var minTen = convertToFloat($scope.borrow.minTenderAccount);
                    var maxTen = convertToFloat($scope.borrow.maxTenderAccount);

                    if (maxTen != 0 && maxTen < tenAccount) {
                        $rootScope.Ui.turnOn('showinfo');
                        $scope.msg = "投资金额大于设置的最大投资金额";
                        $scope.title = "投资金额设定异常";
                        return;
                    }
                    if (minTen != 0 && minTen > tenAccount) {
                        $rootScope.Ui.turnOn('showinfo');
                        $scope.msg = "投资金额小于设置的最小投资金额";
                        $scope.title = "投资金额设定异常";
                        return;
                    }

                    var directPwd = angular.element(document.getElementById("directPwd")).val();
                    //tend
                    var investUrl = $rootScope.URL_ROOT + "/tend";
                    //$rootScope.loading = true;
                    $http.post(investUrl, investEntity).success(function(data, status) {
                        if (checkResponse($rootScope, $scope, data)) {
                            btnElement.removeAttr("disabled");
                            btnElement.css("background-color", "#0caffe");
                            $rootScope.Ui.turnOn('showinfo');
                            $scope.msg = "恭喜您投资成功！";
                            $scope.title = "投资成功";

                            if (!isEmpty($scope.returnUrl)) {
                                handlerReturnUrl($scope.returnUrl);
                            } else {
                                if (!isEmpty(data.returnUrl)) {
                                    handlerReturnUrl($scope.returnUrl);
                                }
                            }
                            loadBorrowAccountInfo($http, $rootScope, $scope, url);
                        } else {
                            btnElement.removeAttr("disabled");
                            btnElement.css("background-color", "#0caffe");
                        }
                    }).error(function(data, status) {
                        if (checkResponse($rootScope, $scope, data)) {}
                    });
                }
            }
        }

        $scope.showToolbar = function() {

            if (isEmpty($scope.account) || isEmpty($scope.borrow) || $scope.borrow.status != 8 || $scope.borrow.uplanBorrowsIsShow == 1) {
                return false;
            }

            return true;
        }

        //add by wangning  2015-06-16
        $scope.showInvest = function() {
            if (isEmpty($scope.account) || isEmpty($scope.borrow) || $scope.borrow.status != 8 || $scope.borrow.uplanBorrowsIsShow == 1) {
                return false;
            }

            if (isEmpty($scope.account.balance) || isEmpty($scope.account.continueTotal) || isEmpty($scope.borrow.minTenderAccount)) {
                return false;
            }
            var balance = convertToFloat($scope.account.balance) + convertToFloat($scope.account.continueTotal);
            var minAmount = convertToFloat($scope.borrow.minTenderAccount);
            return balance >= minAmount;

        }
        //是否显示聚金币
        $scope.ShowJujinBi = function() {
            if (isEmpty($scope.account) || isEmpty($scope.borrow)) {
                return false;
            }
            if (!$scope.isEventBind) {
                $("#amount").unbind('keyup').keyup(function() {
                    $scope.isEventBind = true;
                    ShowJujinBiInfo(convertToFloat($scope.account.coin), convertToFloat($scope.borrow.vouchersRate), $scope.borrow.borrowAccountWait);
                });
                ShowJujinBiInfo(convertToFloat($scope.account.coin), convertToFloat($scope.borrow.vouchersRate), $scope.borrow.borrowAccountWait);
            }

            var vouRate = $scope.borrow.vouchersRate;
            var coin = $scope.account.coin;

            return !isEmpty(vouRate) && !isEmpty(coin);
        }

        loadBorrowAccountInfo($http, $rootScope, $scope, url);

    }
]);

//复制邀请链接
app.directive('inviteUrl', ['$rootScope', '$http', function($rootScope,$http) {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            $http({
                method: 'GET',
                url: $rootScope.URL_ROOT + '/inviteurl'
            }).success(function(responseData) {
                if(responseData && responseData.status){
                    element.attr("href",'jsbridge://action?data={"action":"doCopy","url":"'+responseData.entity + '","flag":"可选"}');
                }else{
                    console.log(responseData);
                }                   
            });
        }
    }
}]);

//邀请人列表
app.controller('inviteController', ['$rootScope', '$scope', '$routeParams','commonService','$location',
    function($rootScope, $scope, $routeParams,service,$location) {
        //初始化信息
        setDefaultValue($scope, $rootScope);
        //二维码图片
        $scope.qrcodeimgUrl = $rootScope.URL_ROOT + "/popularity";
        //邀请列表信息
        var inviteConfig = {
            url: $rootScope.URL_ROOT + "/invite"
        };
        //加载更多
        $scope.loadMore = function() {
            service.loadMore(inviteConfig,$scope,{
                proName: "invites"
            });
        };
        //加载邀请列表
        $scope.loadInvites = function() {
            if (isEmpty($scope.invites)) {
                service.loadPageAction(inviteConfig,$scope).success(function(response){
                    if (!isEmpty(response.entity.invets.pageCount)) {
                        $scope.totalPageCount = response.entity.invets.pageCount;
                    }
                    //邀请列表
                    if (!isEmpty($scope.invites) && Array.isArray($scope.invites)) //列表中已有元素
                    {
                        var list = response.entity.invets.list;
                        $scope.invites = $scope.invites.concat(list);
                    } else {
                        $scope.invites = response.entity.invets.list;
                    }
                });
            }
        };

		//20160517ZDQ
		var path = $location.path();
		var nScrollHight = 0; //滚动距离总长(注意不是滚动条的长度)
		var nScrollTop = 0;   //滚动到的当前位置
		var mobileFlag = $routeParams.mobile;
		$(".inviteFriends .scrollable-content").off("scroll");
		if(path.indexOf("/myInvite") != -1){
			$(".inviteFriends .scrollable-content").scrollTop(2);
		}
		$(".inviteFriends .scrollable-content").on("scroll",function(){
			nScrollHight = $(this)[0].scrollHeight;
			nScrollTop = $(this)[0].scrollTop;
			var nDivHight = $(".inviteFriends .scrollable-content").height();
			var paddingBottom = parseInt( $(this).css('padding-bottom') ),paddingTop = parseInt( $(this).css('padding-top') );
			if(path.indexOf("/invite") != -1 && nScrollTop + paddingBottom + paddingTop + nDivHight >= nScrollHight){
				$(this).off("scroll");
				if(mobileFlag != undefined){
					window.location.href = "#/myInvite?mobile="+mobileFlag;
				}else{
					window.location.href = "#/myInvite";
				}
			}else if(path.indexOf("/myInvite") != -1 && nScrollTop == 0){
				$(this).off("scroll");
				if(mobileFlag != undefined){
					window.location.href = "#/invite?mobile="+mobileFlag;
				}else{
					window.location.href = "#/invite";
				}
			}
		});
    }
]);

//充值列表
app.controller('rechargeController', ['$rootScope', '$scope', '$http', '$location',
    function($rootScope, $scope, $http, $location) {

        $http.get($rootScope.URL_ROOT + '/atteststatus')
            .success(function(responseData) {
                if (responseData.entity.idFlg != 1) {
                    $location.url("/attest");
                }
            });

        $http.get($rootScope.URL_ROOT + '/accountinfo')
            .success(function(responseData) {
                $scope.balance = responseData.entity.balance;
            });
        $scope.recharge = function() {
			if(isNaN($scope.rechargeValue)||$scope.rechargeValue>50000 || $scope.rechargeValue<=0)
			{
				return;
			}
			else
			{
				//提交充值
				$rootScope.amout = $scope.rechargeValue;
				//跳转
				$location.url("/confrec");
			}

        };
    }
]);

//investController
//已投项目
app.controller('investController', ['$rootScope', '$scope', '$http', 'commonService','$routeParams',
    function($rootScope, $scope, $http,service, $routeParams) {
        //初始化信息
        setDefaultValue($scope, $rootScope);
        var type = $routeParams.type;

        // 默认为汇款中
        if (isEmpty(type)) {
            type = 0;
            $scope.type = type;
        } else {
            if (type == 2) {
                $scope.activeTab = 2;
                $rootScope.Ui.turnOn('button3');
            }
        }
        //投资记录参数
        var investConfig = {
            url : $rootScope.URL_ROOT + "/invest",
            params: {
                type: type
            }
        };
        //加载更多
        $scope.loadMore = function() {
            service.loadMore(investConfig,$scope,{
                proName: "invets"
            });
        };
        //加载不同状态的列表
        $scope.loadInvestByType = function(type) {
            $scope.invets = null;
            $scope.type = type;
            //切换时显示第一页
            $scope.currentPage = 1;
            investConfig.params.type = type;
            //加载列表
            service.genRecord(investConfig,$scope,{
                proName: "invets"
            });
        };
        //未加载时加载信息
        if (isEmpty($scope.invets)) {
            //加载列表
            service.genRecord(investConfig,$scope,{
                proName: "invets"
            });
        }
    }
]);

//我的消息
app.controller('messageController', ['$rootScope', '$scope','commonService','$sce',
    function($rootScope, $scope,service,$sce) {
        //初始化默认值
        setDefaultValue($scope, $rootScope);
        //消息配置
        var messageConfig = {
			url: $rootScope.URL_ROOT + "/msg"
        };
        //
        function formatMessage(msg,$sce){
        if (isEmpty(msg) || isEmpty(msg.content)) {
	            return msg;
	        }
	        msg.content = $sce.trustAsHtml("     \t\t正文：" + msg.content);
	        return msg;
	    }
		//
        $scope.loadMore = function() {
            service.loadMore(messageConfig,$scope,{
                proName: "messages"
            },formatMessage,$sce);
        };
		//
        if (typeof($scope.messages) == "undefined" || $scope.messages == null) {
            service.genRecord(messageConfig,$scope,{
                proName: "messages"
            },formatMessage,$sce);
        }
    }
]);
//回款计划
app.controller('recoveController', ['$rootScope', '$scope', 'commonService','$routeParams',
    function($rootScope, $scope,service,$routeParams) {
        //初始化默认值
        setDefaultValue($scope, $rootScope);
		//
        var borrowId = $routeParams.id;		
		//
		var recoveConfig = {
			url: $rootScope.URL_ROOT + "/recove",
			params:{
				borrowId: borrowId
			}
		};
		//
        $scope.loadMore = function() {
            service.loadMore(recoveConfig,$scope,{
                proName: "recoves"
            });
        };
		//
        if (isEmpty($scope.recoves)) {
            //
            service.genRecord(recoveConfig,$scope,{
                proName: "recoves"
            });
        }
    }
]);

//查询标详情的回款计划
app.controller('accountBorrowRecoverController', ['$rootScope', '$scope', '$http', '$routeParams',
    function($rootScope, $scope, $http, $routeParams) {

        setDefaultValue($scope, $rootScope);

        $scope.borrow_id = encodeURI($routeParams.borrow_id);

        var url = $rootScope.URL_ROOT + "/account/recover/borrow?borrow_id" + $scope.borrow_id;

        $http.get(url).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {
                $scope.borrow_recover = response.entity;
            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
            //Handler error
        });
    }
]);


//查询用户的收益排名(每天统计一次)
app.controller('incomeController', ['$rootScope', '$scope', '$http', '$routeParams',
    function($rootScope, $scope, $http, $routeParams) {

        $scope.borrow_id = encodeURI($routeParams.borrow_id);

        // User agent displayed in home page
        $scope.userAgent = navigator.userAgent;

        // Needed for the loading screen
        $rootScope.$on('$routeChangeStart', function() {
            $rootScope.loading = true;
        });

        $rootScope.$on('$routeChangeSuccess', function() {
            $rootScope.loading = false;
        });


        var accountUrl = $rootScope.URL_ROOT + "/income";

        $http.get(accountUrl).success(function(response) {
            $scope.income_rank = response;
        }).error(function(data, status, headers, config) {
            // Handle the error
        });

    }
]);

//提现
app.controller('withdrawController', ['$rootScope', '$scope', '$http', '$routeParams', '$location', '$sce',
    function($rootScope, $scope, $http, $routeParams, $location, $sce) {

        $rootScope.RETURN = "#/withdraw";
        var url = $rootScope.URL_ROOT + "/getWithDrawInfo";

        $http.get(url).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {
                $scope.withdrawEntity = response.entity;
            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
        });

        $scope.withdraw = function() {

            if (convertToFloat($scope.amount) == 0 || convertToFloat($scope.amount) < 0) {
                $rootScope.Ui.turnOn('showinfo');
                $scope.msg = "请检查提现金额设置，金额必须大于100元。";
                $scope.title = "请检查输入";
                return false;
            }

            var entity = {};
            entity.money = $scope.amount;
            entity.cashPwd = encodeURI($scope.password);
            $rootScope.loading = true;
            $http.post($rootScope.URL_ROOT + "/withdraw", entity).success(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {
                    $rootScope.Ui.turnOn('showinfo');
                    $scope.msg = "恭喜您，提现申请已提交成功，请等待工作人员的审批。";
                    $scope.title = "提现成功";
                    //注册正常跳转至投标页面
                    $location.url("default");
                } else {
                    $rootScope.Ui.turnOn('showinfo');

                    if (!isEmpty(data.msg)) {
                        $scope.msg = data.msg;
                    } else {
                        $scope.msg = "提现过程失败，请留意金额是否发生变化，如有疑问请与客服联系。";
                    }
                    $scope.title = "提现失败";
                }

            }).error(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {}
            });

        };
    }
]);


//绑定提现银行卡
app.controller('bankcardController', function($rootScope, $scope, $http, $routeParams) {

    $rootScope.RETURN = "#/bankcard";
    var url = $rootScope.URL_ROOT + "/bank";

    $http.get(url).success(function(response) {
        if (checkResponse($rootScope, $scope, response)) {
            $scope.bankCard = response.entity;

        }
    }).error(function(response, status, headers, config) {
        checkResponse($rootScope, $scope, response);
    });

});

//从微信登录
app.controller('fromWeiXinController', function($rootScope, $scope, $http, $routeParams) {

    $rootScope.RETURN = "#/bankcard";
    var url = $rootScope.URL_ROOT + "/bank";

    $http.get(url).success(function(response) {
        if (checkResponse($rootScope, $scope, response)) {
            $scope.bankCard = response.entity;
        }
    }).error(function(response, status, headers, config) {
        checkResponse($rootScope, $scope, response);
    });

});

//收益计算器
app.controller('calcController', function($rootScope, $scope, $http, $routeParams) {

    $scope.rate = 12;
    $scope.scale = 0;
    $scope.account = 0;
    $scope.period = 12;


    $scope.rate2 = 4.4480;
    $scope.rate3 = 0.35;

    if (!isEmpty($routeParams.rate)) {
        $scope.rate = $routeParams.rate;
    }
    if (!isEmpty($routeParams.scale)) {
        $scope.scale = $routeParams.scale;
    }
    if (!isEmpty($routeParams.account)) {
        $scope.account = $routeParams.account;
    }
    if (!isEmpty($routeParams.period)) {
        $scope.period = $routeParams.period;
    }

    var tmpCapital = 5000;
    if ($routeParams.captial) {
        $scope.captial = $routeParams.captial;
        tmpCapital = $routeParams.captial;
    }

    var account = convertToFloat($scope.account);
    var rate = convertToFloat($scope.rate);
    var period = convertToFloat($scope.period);
    var reward = convertToFloat($scope.scale);

    $scope.reward = reward;

    if (reward != 0) {
        $scope.interest1 = (account + (tmpCapital * (rate + reward) * period / 1200)).toFixed(2);
    } else {
        $scope.interest1 = (account + (tmpCapital * rate * period / 1200)).toFixed(2);
    }

    $scope.interest2 = (tmpCapital * $scope.rate2 * period / 1200).toFixed(2);
    $scope.interest3 = (tmpCapital * $scope.rate3 * period / 1200).toFixed(2);


    //f.toFixed(2);
    $scope.calcInterest = function() {

        var capitalElement = document.getElementById("capitalInput");
        if (!isEmpty(capitalElement)) {
            var captial = angular.element(capitalElement).val();


            if (!isEmpty(captial) && captial != "") {

                var captialValue = parseFloat(captial);

                var interest1 = 0;


                if (reward != 0) {
                    interest1 = (account + (captialValue * (rate + reward) * period / 1200)).toFixed(2);
                } else {
                    interest1 = (account + (captialValue * rate * period / 1200)).toFixed(2);
                }

                var interest2 = (captialValue * $scope.rate2 * period / 1200).toFixed(2);
                var interest3 = (captialValue * $scope.rate3 * period / 1200).toFixed(2);


                $scope.interest1 = interest1;
                $scope.interest2 = interest2;
                $scope.interest3 = interest3;
            }
        }

    };

});


//用户收益曲线
app.controller('interestSummaryController', ['$rootScope', '$scope', '$http', '$routeParams',
    function($rootScope, $scope, $http, $routeParams) {

        setDefaultValue($scope, $rootScope);

        var randomScalingFactor = function() {
            return Math.round(Math.random() * 100)
        };
        var lineChartData = {
            datasets: [{
                label: "聚金资本",
                fillColor: "#FF6F41",
                strokeColor: "#FF6F41",
                pointColor: "rgba(220,220,220,1)",
                pointStrokeColor: "#FF6F41",
                pointHighlightFill: "#FF6F41",
                pointHighlightStroke: "rgba(220,220,220,1)"
            }, {
                label: "货币基金",
                fillColor: "#9DD1FF",
                strokeColor: "#9DD1FF",
                pointColor: "rgba(151,187,205,1)",
                pointStrokeColor: "#9DD1FF",
                pointHighlightFill: "#9DD1FF",
                pointHighlightStroke: "rgba(151,187,205,1)"
            }, {
                label: "银行活期",
                fillColor: "#62BBFF",
                strokeColor: "#62BBFF",
                pointColor: "rgba(151,187,205,1)",
                pointStrokeColor: "#62BBFF",
                pointHighlightFill: "#62BBFF",
                pointHighlightStroke: "rgba(151,187,205,1)"
            }]
        }

        $scope.randomScalingFactor = randomScalingFactor;
        var url = $rootScope.URL_ROOT + "/rank";

        $http.get(url).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {

                lineChartData.labels = response.entity.labels;
                lineChartData.datasets[0].data = response.entity.points;
                lineChartData.datasets[1].data = response.entity.points1;
                lineChartData.datasets[2].data = response.entity.points2;


                $scope.lineChartData = lineChartData;

                $scope.account = response.entity.account;
                $scope.totalIntervest = response.entity.totalIntervest;
                $scope.totalIntervest1 = response.entity.totalIntervest1;
                $scope.totalIntervest2 = response.entity.totalIntervest2;

                var ctx = document.getElementById("canvas").getContext("2d");
                window.myLine = new Chart(ctx).Line($scope.lineChartData, {
                    responsive: true
                });
            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
        });

        $scope.getRankImage = function() {
            if ($scope.account.rank == 1) {
                return "../images/rank1.png";
            } else if ($scope.account.rank == 2) {
                return "../images/rank2.png";
            } else {
                return "../images/rank3.png";
            }
        }
    }
]);


//好友收益
app.controller('friendRankController', ['$rootScope', '$scope', '$http', '$routeParams',
    function($rootScope, $scope, $http, $routeParams) {

        var url = $rootScope.URL_ROOT + "/friendsrank";

        $http.get(url).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {
                var totalCollections = response.list;

                $scope.account = totalCollections.shift();
                $scope.ranks = totalCollections;
            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
        });

        $scope.getRankImage = function(rank) {
            if (rank == 1) {
                return "../images/rank1.png";
            } else if (rank == 2) {
                return "../images/rank2.png";
            } else {
                return "../images/rank3.png";
            }
        }

    }
]);

//好友收益
app.controller('HomeController', ['$rootScope', '$scope', '$http', '$routeParams', '$location',
    function($rootScope, $scope, $http, $routeParams, $location) {
        //图标切换
        var active = "#FF6666";
        var hover = "#B1B3B5";

        $rootScope.dl1 = {
            "icon": "active",
            "color": active
        }
        $rootScope.dl2 = {
            "icon": "hover",
            "color": hover
        }
        $rootScope.dl3 = {
            "icon": "hover",
            "color": hover
        }
        $rootScope.dl4 = {
            "icon": "hover",
            "color": hover
        }
        var activetype = {
            "icon": "active",
            "color": active
        }
        var hovertype = {
            "icon": "hover",
            "color": hover
        }

        $scope.goInvite = function() {
            $rootScope.dl1 = activetype;
            $rootScope.dl2 = hovertype;
            $rootScope.dl3 = hovertype;
            $rootScope.dl4 = hovertype;
            $location.url("/");
        };
        $scope.goInvest = function() {
            $rootScope.dl1 = hovertype;
            $rootScope.dl2 = activetype;
            $rootScope.dl3 = hovertype;
            $rootScope.dl4 = hovertype;
            $location.path("borrows");
        };
        $scope.goAccount = function() {
            $rootScope.dl1 = hovertype;
            $rootScope.dl2 = hovertype;
            $rootScope.dl3 = activetype;
            $rootScope.dl4 = hovertype;
            $location.url("default");
        };
        $scope.goAttest = function() {
            $rootScope.dl1 = hovertype;
            $rootScope.dl2 = hovertype;
            $rootScope.dl3 = hovertype;
            $rootScope.dl4 = activetype;
            $location.url("more");
        };

        $rootScope.IndexShowNav = 0;

        $rootScope.ShowNav = function() {
            var path = $location.path();

            if (path == "/") {
                return false;
            }
            else if (path.indexOf("default") != -1) {
                return false;
            } else if (path.indexOf("landing.html") != -1) {
                return false;
            } else if (path.indexOf("xglcreg") != -1) {
                return false;
            } else if (path.indexOf("wml") != -1) {
                return false;
            } else if (path.indexOf("med") != -1) {
                return false;
            } else if (path.indexOf("own") != -1) {
                return false;
            } else if (path.indexOf("tsou") != -1) {
                return false;
            } else if (path.indexOf("questions") != -1 && $routeParams.mobile == 1) {
                return false;
            } else if (path.indexOf("contactus") != -1 && $routeParams.mobile == 1) {
                return false;
            }
            else if (path.indexOf("invite") != -1 && $routeParams.mobile == 1) {
                return false;
            }
			else if (path.indexOf("myInvite") != -1 && $routeParams.mobile == 1) {
                return false;
            }
            //2016/07/04 添加
            else if (path.indexOf("myreds") != -1) {
                return false;
            }
            else if (path.indexOf("ticket") != -1) {
                return false;
            }
            else if (path.indexOf("interest") != -1) {
                return false;
            }
            else if (path.indexOf("jujinbao") != -1) {
                return false;
            }
            else if (path.indexOf("investinfo") != -1) {
                return false;
            }
            else if (path.indexOf("accountinfo") != -1) {
                return false;
            }
            else if (path.indexOf("more") != -1) {
                return false;
            }
            else if (path.indexOf("activityinfo") != -1) {
                return false;
            }
            else if (path.indexOf("invest") != -1) {
                return false;
            }
            else if (path.indexOf("recove") != -1) {
                return false;
            }
            else if (path.indexOf("auto") != -1) {
                return false;
            }
            else if (path.indexOf("accountlog") != -1) {
                return false;
            }
            else if (path.indexOf("bankcard") != -1) {
                return false;
            }
            else if (path.indexOf("chance") != -1) {
                return false;
            }
            else if (path.indexOf("invite") != -1) {
                return false;
            }
            else if (path.indexOf("myInvite") != -1) {
                return false;
            }
            else if (path.indexOf("accountset") != -1) {
                return false;
            }
            else if (path.indexOf("attest") != -1) {
                return false;
            }
            else if (path.indexOf("changepsw") != -1) {
                return false;
            }
            else if (path.indexOf("findpsw") != -1) {
                return false;
            }
            else if (path.indexOf("borrows") != -1) {
                return false;
            }
            else if (path.indexOf("borrowinfo") != -1) {
                return false;
            }
            else if (path.indexOf("repayment") != -1) {
                return false;
            }
            else if (path.indexOf("message") != -1) {
                return false;
            }
            else if (path.indexOf("questions") != -1) {
                return false;
            }
            else if (path.indexOf("contactus") != -1) {
                return false;
            }
            else if (path.indexOf("withdraw") != -1) {
                return false;
            }
            else if (path.indexOf("recharge") != -1) {
                return false;
            }
            else if (path.indexOf("calc") != -1) {
                return false;
            }
            return true;
        }
        //
        $rootScope.ShowBottomNav = function() {
            var path = $location.path();

            if (path.indexOf("landing.html") != -1) {
                return false;
            } else if (path.indexOf("med") != -1) {
                return false;
            } else if (path.indexOf("own") != -1) {
                return false;
            } else if (path.indexOf("tsou") != -1) {
                return false;
            } else if (path.indexOf("questions") != -1 && $routeParams.mobile == 1) {
                return false;
            } else if (path.indexOf("contactus") != -1 && $routeParams.mobile == 1) {
                return false;
            }
            else if (path.indexOf("invite") != -1 && $routeParams.mobile == 1) {
                return false;
            }
			else if (path.indexOf("myInvite") != -1 && $routeParams.mobile == 1) {
                return false;
            }
            else if (path.indexOf("xglcreg") != -1) {
                return false;
            } else if (path.indexOf("wml") != -1) {
                return false;
            } else if (path.indexOf("calc") != -1) {
                return false;
            }
            return true;
        }

    }
]);

//资金记录
app.controller('AccountLogController', ['$rootScope', '$scope', '$sce','commonService',
    function($rootScope, $scope, $sce,service) {
        //初始化数据
        setDefaultValue($scope, $rootScope);

        //获取数据参数
        var logConfig = {
            url : $rootScope.URL_ROOT + "/accountlog"
        };
        //格式化数据
        function formatAccountLog(log,$sce){
            if (isEmpty(log) || isEmpty(log.remark)) {
                return log;
            }

            log.remark = $sce.trustAsHtml(log.remark);
            return log;
        };
        //加载更多
        $scope.loadMore = function() {
            service.loadMore(logConfig,$scope,{
                proName: "logs"
            },formatAccountLog,$sce);
        };
        //获取类型
        $scope.getType = function(type) {
            switch (type) {
                case 0:
                    return "Fine";
                case 1:
                    return "Fee";
                case 2:
                    return "UnFreeze";
                case 3:
                    return "Freeze";
                default:
                    break;
            }
            return "Fine";
        };
        //未加载过数据时加载数据
        if (isEmpty($scope.logs)) {
            service.genRecord(logConfig,$scope,{
                proName: "logs"
            },formatAccountLog,$sce);
        }
    }
]);


/*--2016/06/29-directive-指令--*/
app.directive('drawVerifyImg',
    function(scope,element,attrs) {
        return {
            restrict: "A",
            link: function() {
                attrs.src= SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();
            }
        };
    }
);

var drawVerifyImg = function() {
    var img = document.getElementById("captcha-img");

    if (img != null) {
        document.getElementById("captcha-img").src = SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();
    }
}

app.controller('BorrowMedController', ['$scope', '$rootScope', '$location', '$timeout', "$http", "$routeParams", "baseService",
    function($scope, $rootScope, $location, $timeout, $http, $routeParams, service) {

        var url = service.makeUrl("/tzj/borrow?id=" + $routeParams.id);

        service.loadEntity(url, $scope, "entity", function(response) {

            if(isEmpty(response)||isEmpty(response.entity)||isEmpty(response.entity.borrowType))
            {
                 window.location.href = SERVER_ADDRESS + "/m/jujin/#/default";
                 return;
            }
            var borrowType = trim(response.entity.borrowType);
            var borowTypes = ["2", "8", "11", "14", "15"];

            if (isEmpty(response.entity)) {
                window.location.href = SERVER_ADDRESS + "/m/jujin";
            } else if (borrowType == "7") {
                window.location.href = SERVER_ADDRESS + "/m/jujin/#/uplaninfo?id=" + $routeParams.id;
            } else if (borowTypes.indexOf(borrowType) >= 0) {
                window.location.href = SERVER_ADDRESS + "/m/jujin/#/borrowinfo?id=" + $routeParams.id;
            } else {
                window.location.href = SERVER_ADDRESS + "/m/jujin";
            }

        });
    }
]);


//投之家绑定
app.controller('TzjBindController', function($rootScope, $scope, $http, $routeParams, $location) {

    $scope.captchaerror = false;
    $scope.pwderror = false;
    $scope.captchaerror = false;

    $scope.validateStr = SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();


    var tzjEntity = {};

    $scope.drawImg = function() {
        drawVerifyImg();
    };

    var properties = new Array("timestamp", "from", "service", "username", "email", "telephone", "realName", "cardNo");
    for (var i = 0; i < properties.length; i++) {
        var key = properties[i];
        tzjEntity[key] = $routeParams[key];
    }


    $http.get($rootScope.URL_ROOT + "/queryloginstatus").success(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {
            $scope.validate = data.entity;
        }
    }).error(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {}
    });

    $scope.user = {};
    //服务器返回的消息
    $scope.msg = "";
    if (!isEmpty($routeParams.account)) {
        $scope.user.userName = $routeParams.account;
        var un = document.getElementById("username");
        var unElement = angular.element(un);
        unElement.attr("readonly", "readonly");
    }
    if (!isEmpty($routeParams.channel)) {
        $scope.user.channel = $routeParams.channel;
        //渠道用户，隐藏注册和找回密码
        $(".login-c-right").css('display', 'none');
    }
    if (!isEmpty($routeParams.platUsername)) {
        $scope.user.platUsername = $routeParams.platUsername;
    }

    if (!isEmpty($routeParams.returnUrl)) {
        $scope.user.returnUrl = $routeParams.returnUrl;
    }

    $scope.findpsw = function() { //改变密码 页面ng-click
        var channel = $routeParams.channel;
        var platUsername = $routeParams.platUsername;
        var account = $routeParams.account;

        var url = "/findpsw";

        if (!isEmpty(channel)) {
            url = "/findpsw?channel=" + channel;
        }
        if (!isEmpty(platUsername)) {
            url += "&platUsername=" + platUsername;
        }
        if (!isEmpty(account)) {
            url += "&account=" + account;
        }
        $location.url(url);
    };
    $scope.login = function() {

        if (isEmpty($scope.user.userName)) {
            $scope.usernameerror = true;
            return false;
        }

        if (isEmpty($scope.user.pwd)) {
            $scope.pwderror = true;
            return false;
        }

        if (!isEmpty($scope.validate) && $scope.validate && isEmpty($scope.user.validateCode)) {
            $scope.captchaerror = true;
            return false;
        }

        $scope.user.openId = $scope.openId;
        $rootScope.loading = true;
        $scope.user.tzjUser = tzjEntity;
        $http.post($rootScope.URL_ROOT + "/tzj/bindaction", $scope.user).success(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {
                $rootScope.IS_LOGIN = true;

                $("#wusername").val(data.username);
                $("#usernamep").val(data.usernamep);
                $("#registerAt").val(data.registerAt);
                $("#type").val(data.type);
                $("#timestamp").val(data.timestamp);
                $("#sign").val(data.sign);

                $("#from").val(data.platform);
                $("#service").val(data.service);

                $("#tzjForm").submit();
            } else {
                drawVerifyImg();
                $http.get($rootScope.URL_ROOT + "/queryloginstatus").success(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {
                        $scope.validate = data.entity;
                    }
                }).error(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {}
                });
            }
        }).error(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {}
        });

    };

});

//投之家绑定改
app.controller('TzjEditBindController', function($rootScope, $scope, $http, $routeParams, $location) {
	$scope.usernameerror = false;
    $scope.captchaerror = false;
    $scope.pwderror = false;

    $scope.validateStr = SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();


    var tzjEntity = {};

    $scope.drawImg = function() {
        drawVerifyImg();
    };

    var properties = new Array("username", "email", "telephone", "realName", "cardNo");
    for (var i = 0; i < properties.length; i++) {
        var key = properties[i];
        tzjEntity[key] = $routeParams[key];
    }


    $http.get($rootScope.URL_ROOT + "/queryloginstatus").success(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {
            $scope.validate = data.entity;
        }
    }).error(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {}
    });

    $scope.user = {};
    //服务器返回的消息
    $scope.msg = "";
    
 
        //渠道用户，隐藏注册和找回密码
        $(".login-c-right").css('display', 'none');

    $scope.login = function() {

        if (isEmpty($scope.user.userName)) {
            $scope.usernameerror = true;
            return false;
        }

        if (isEmpty($scope.user.pwd)) {
            $scope.pwderror = true;
            return false;
        }

        if (!isEmpty($scope.validate) && $scope.validate && isEmpty($scope.user.validateCode)) {
            $scope.captchaerror = true;
            return false;
        }

        $scope.user.openId = $scope.openId;
        $rootScope.loading = true;
        $scope.user.tzjUser = tzjEntity;
        $http.post($rootScope.URL_ROOT + "/tzj/bindeditaction", $scope.user).success(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {
                $rootScope.IS_LOGIN = true;

                $("#username").val(data.username);
                $("#usernamep").val(data.usernamep);
                $("#registerAt").val(data.registerAt);
                $("#type").val(data.type);

                $("#tzjForm").submit();
            } else {
                drawVerifyImg();
                $http.get($rootScope.URL_ROOT + "/queryloginstatus").success(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {
                        $scope.validate = data.entity;
                    }
                }).error(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {}
                });
            };
        }).error(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {}
        });

    };

});

//注册用户数
app.controller('loginController', function($rootScope, $scope, $http, $routeParams, $location) {

    $scope.usernameerror = false;
    $scope.pwderror = false;
    $scope.captchaerror = false;



    $scope.validateStr = SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();

    var openid = "";



    //在微信端已经验证通过,需要在后台认证
    if (!isEmpty($routeParams.openid) && isEmpty($scope.openId)) {
        var openid = $routeParams.openid;

        $scope.openid = openid;
        $rootScope.loading = true;
        var url = $rootScope.URL_ROOT + "/loginfromwx?id=" + openid;
        $http.get(url).success(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {
                if (data.msg == "该微信号不存在" || data.msg == "该微信号尚未绑定账号") {
                    $scope.openId = $routeParams.openid;
                } else {
                    $location.url("/");
                    //登录正常跳转自我的账户页面
                    //                  $location.path("default");
                    $rootScope.IS_LOGIN = true;
                }
            }
        }).error(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {}
        });
    }

    $scope.drawImg = function() {
        drawVerifyImg();
    };

    $http.get($rootScope.URL_ROOT + "/queryloginstatus").success(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {
            $scope.validate = data.entity;
        }
    }).error(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {}
    });

    $scope.user = {};
    //服务器返回的消息
    $scope.msg = "";
    if (!isEmpty($routeParams.account)) {
        $scope.user.userName = $routeParams.account;
        var un = document.getElementById("username");
        var unElement = angular.element(un);
        unElement.attr("readonly", "readonly");
    }
    if (!isEmpty($routeParams.channel)) {
        $scope.user.channel = $routeParams.channel;

        //渠道用户，隐藏注册和找回密码
        $(".login-c-right").css('display', 'none');
    }
    if (!isEmpty($routeParams.platUsername)) {
        $scope.user.platUsername = $routeParams.platUsername;
    }

    if (!isEmpty($routeParams.returnUrl)) {
        $scope.user.returnUrl = $routeParams.returnUrl;
    }
    $scope.findpsw = function() { //改变密码 页面ng-click
        var channel = $routeParams.channel;
        var platUsername = $routeParams.platUsername;
        var account = $routeParams.account;

        var url = "/findpsw";

        if (!isEmpty(channel)) {
            url = "/findpsw?channel=" + channel;
        }
        if (!isEmpty(platUsername)) {
            url += "&platUsername=" + platUsername;
        }
        if (!isEmpty(account)) {
            url += "&account=" + account;
        }
        $location.url(url);
    };
    $scope.login = function() {

        if (isEmpty($scope.user.userName)) {
            $scope.usernameerror = true;
            return false;
        }

        if (isEmpty($scope.user.pwd)) {
            $scope.pwderror = true;
            return false;
        }

        if (!isEmpty($scope.validate) && $scope.validate && isEmpty($scope.user.validateCode)) {
            $scope.captchaerror = true;
            return false;
        }

        $scope.user.openId = $scope.openId;
        $rootScope.loading = true;
        $http.post($rootScope.URL_ROOT + "/login", $scope.user).success(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {

                $rootScope.IS_LOGIN = true;

                if (!isEmpty(data.returnUrl)) {
                    handlerReturnUrl(data.returnUrl);
                }
				//从哪儿过来
				if (!isEmpty($routeParams.fromUrl)) {
					window.location.href = $routeParams.fromUrl;
					return;
				}
                if (!isEmpty($rootScope.RETURN) && $rootScope.RETURN != "") {
                    var retPath = $rootScope.RETURN;
                    retPath = retPath.replace("#/", "");
                    $location.url(retPath);
                } else {
                    $location.url("/");
                    //$location.url("default");
                    //$location.url("adinfo");
                }
                //登录正常跳转自用户中心页面
            } else {
                drawVerifyImg();

                $http.get($rootScope.URL_ROOT + "/queryloginstatus").success(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {
                        $scope.validate = data.entity;
                    }
                }).error(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {}
                });
            }
        }).error(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {}
        });

    };

});



function SendSms($rootScope, $http, $scope, tel, type, img) {

    var url = "";
    if (isEmpty(tel)) {
        url = $rootScope.URL_ROOT + "/sms2";
    } else {
        if (isEmpty(type)) {

            if (!isEmpty(img)) {
                url = $rootScope.URL_ROOT + "/smsverifyimg3?tel=" + tel + "&img=" + img;
            } else {
                url = $rootScope.URL_ROOT + "/smsapicode?tel=" + tel;
            }
        } else {
            if (!isEmpty(img)) {
                url = $rootScope.URL_ROOT + "/smsverifyimg3?tel=" + tel + "&img=" + img;
            } else {
                url = $rootScope.URL_ROOT + "/smsapicode?tel=" + tel;
            }
        }
    }
    var btn = document.getElementById("jm-contract-btn");
    var btnElement = angular.element(btn);

    curCount = count;
    //设置button效果，开始计时
    btnElement.attr("disabled", "true");
    btnElement.css("background-color", "gray");
    btnElement.val(curCount + "秒后重试");
    InterValObj = window.setInterval(SetRemainTime, 1000); //启动计时器，1秒执行一次

    $http.get(url).success(function(data, status) {

        if (data.msg == "请输入验证码" || data.msg == "验证码不正确" || data.msg == "验证码不正确") {
            window.clearInterval(InterValObj); //停止计时器
            btnElement.removeAttr("disabled"); //启用按钮
            btnElement.css("background-color", "#0caffe");
            btnElement.val("重新发送");
            code = ""; //
        }

        if (checkResponse($rootScope, $scope, data)) {

        }
    }).error(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {

        }
    });
}


function SetRemainTime(btnId) {

    var tmpBtnId = "jm-contract-btn";
    if (!isEmpty(btnId)) {
        tmpBtnId = btnId;
    }
    var btn = document.getElementById(tmpBtnId);
    var btnElement = angular.element(btn);
    if (curCount == 0) {
        window.clearInterval(InterValObj); //停止计时器
        btnElement.removeAttr("disabled"); //启用按钮
        btnElement.css("background-color", "#0caffe");
        btnElement.val("重新发送");
        code = ""; //清除验证码。如果不清除，过时间后，输入收到的验证码依然有效
    } else {
        curCount--;
        if (btnElement.css("background-color") != "gray") {
            btnElement.css("background-color", "gray");
        }
        btnElement.val(curCount + "秒后重试");
    }
}

function SetEmailTime() {
    return SetRemainTime("btnEmailVerify");
}

/*-------------------------------------------*/
var InterValObj; //timer变量，控制时间
var count = 60; //间隔函数，1秒执行
var curCount; //当前剩余秒数
var code = ""; //验证码
/*-------------------------------------------*/



//注册用户数
app.controller('registerController', function($rootScope, $scope, $http, $routeParams, $location) {

    var invite = "";

    if (isEmpty($scope.showMemo)) {
        $scope.showMemo = 1;
    }

    if (isEmpty($scope.reg)) {
        $scope.reg = {};
    }

    if ($routeParams.channel == 'xglc') {
        $scope.reg.isXglc = 1;
    }

    if (!isEmpty($routeParams.channel)) {
        $scope.reg.channel = $routeParams.channel;
    }

    if (!isEmpty($routeParams.platUsername)) {
        $scope.reg.platUsername = $routeParams.platUsername;
    }

    if (!isEmpty($routeParams.returnUrl)) {
        $scope.reg.returnUrl = $routeParams.returnUrl;
    }



    /*--2016/3/10--*/
    $scope.div_active_show = false;
    $scope.hide = function() {
        $scope.div_active_show = false;
    }
    $scope.active_show = function() {
        if ($("#active_masking").length > 0) {
            $("#active_masking").css('display', 'block');
            $scope.div_active_show = true;
        } else {
            var masking = document.createElement("div");
            masking.className = "masking-02";
            masking.style.display = "block";
            masking.id = "active_masking";

            /*var f_img = document.createElement("div");
             f_img.className = "f-img00";
             masking.appendChild(f_img);*/

            $scope.active_zone = $("#active_zone");
            $("#active_zone").remove();

            masking.appendChild($scope.active_zone[0]);
            $(document.body).append(masking);
            $scope.div_active_show = true;

            $(masking).click(function() {
                $("#active_masking").css('display', 'none');
            });
        }
    }



    $scope.validateStr = SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();

    $http.get($rootScope.URL_ROOT + "/querysmsstatus").success(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {
            $scope.validate = data.entity;
        }
    }).error(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {}
    });

    $scope.ShowMemo = function() {
        if (!isEmpty($scope.showMemo) && $scope.showMemo == 1) {
            $scope.showMemo = 0;
        } else {
            $scope.showMemo = 1;
        }
    }
    $scope.showRecomm = true;
    //在微信端已经验证通过,需要在后台认证
    if (!isEmpty($routeParams.invite)) {
        var invite = $routeParams.invite;
        $scope.reg.invite = $routeParams.invite;
        $rootScope.invite = $scope.reg.invite;
        $scope.showRecomm = false;
    } else if (!isEmpty($rootScope.invite)) {
        $scope.reg.invite = $rootScope.invite;
        $scope.showRecomm = false;
    }

    if (!isEmpty($routeParams.openid)) {
        var openid = $routeParams.openid;
        $scope.reg.openId = openid;
        $rootScope.openId = openid;
    } else if (!isEmpty($rootScope.openId)) {
        $scope.reg.openId = $rootScope.openId;
    }

    $scope.drawImg = function() {
        drawVerifyImg();
    };



    //服务器返回的消息
    $scope.msg = "";

    $scope.usernameerror = false;
    $scope.pwderror = false;
    $scope.validateCodeError = false;
    $scope.pwdNotMatchError = false;
    $scope.pwdLengthError = false;

    //获取手机验证码
    $scope.getSmsCode = function() {
        $scope.usernameerror = false;

        var tel = $scope.reg.userName;
        if (!checkIsMobile(tel)) {
            $scope.usernameerror = true;
            return false;
        }
        if ($scope.validate == 1 && isEmpty($scope.reg.imgVerifyCode)) {
            return;
        }
        SendSms($rootScope, $http, $scope, tel, "r", $scope.reg.imgVerifyCode);
    }

    if (!isEmpty($routeParams.account) && checkIsMobile($routeParams.account)) {
        $scope.reg.userName = $routeParams.account;
        $scope.getSmsCode();

        var un = document.getElementById("username");
        var unElement = angular.element(un);
        unElement.attr("readonly", "readonly");
    }

    if (!isEmpty($routeParams.phone)) {
        var phone = $routeParams.phone;
        $scope.reg.userName = phone;
        $scope.getSmsCode();
    }


    $scope.clearStatus = function() {
        $scope.usernameerror = false;
        $scope.pwderror = false;
        $scope.validateCodeError = false;
        $scope.pwdNotMatchError = false;
        $scope.pwdLengthError = false;
    };

    $scope.login = function() {
        console.info($routeParams.channel);
        if (!isEmpty($routeParams.channel) && !isEmpty($routeParams.returnUrl)) {
            $location.url("login?channel=" + $routeParams.channel + "&returnUrl=" + $routeParams.returnUrl);
        } else if (!isEmpty($routeParams.account) && !isEmpty($routeParams.returnUrl)) {
            $location.url("login?account=" + $routeParams.account + "&returnUrl=" + $routeParams.returnUrl);
        } else if (!isEmpty($routeParams.channel) && !isEmpty($routeParams.account)) {
            $location.url("login?channel=" + $routeParams.channel + "&account=" + $routeParams.account);

        } else if (!isEmpty($routeParams.account)) {
            $location.url("login?account=" + $routeParams.account);
        } else {
            $location.url("login");
        }
    };

    //注册新用户
    $scope.register = function() {
        if (isEmpty($scope.reg) || (!$scope.reg)) {
            return false;
        }
        var tel = $scope.reg.userName;
        if (!checkIsMobile(tel)) {
            $scope.usernameerror = true;
            return false;
        }
        if (isEmpty($scope.reg.pwd)) {
            $scope.pwderror = true;
            return false;
        }
        if ($scope.reg.pwd.length < 6 || $scope.reg.pwd.length > 16) {
            $scope.pwdLengthError = true;
            return false;
        }
        if (!$scope.reg.agree) {
            return false;
        }
        if (isEmpty($scope.reg.validateCode)) {
            $scope.validateCodeError = true;
            return false;
        }
        if ($("#repassword").length > 0 && $("#repassword").val() != $scope.reg.pwd) {
            $scope.pwdNotMatchError = true;
            return false;
        }

        $rootScope.loading = true;
        $http.post($rootScope.URL_ROOT + "/register", $scope.reg).success(function(data, status) {
            $rootScope.loading = false;

			if(data){
				if(data.status){
					$rootScope.IS_LOGIN = true;
					if (!isEmpty(data.returnUrl)) {
						handlerReturnUrl(data.returnUrl);
						return;
					} else {
						//注册正常跳转至投标页面
						$location.url("/");
					}
				}else{
					$rootScope.Ui.turnOn('showinfo');
					$scope.msg = data.msg;
					$scope.title = "异常提示";
					$scope.validate = 1;
				}
			}
        }).error(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {}
        });
    };
});


function getAttestStatus($rootScope, $http, $scope) {
    var getUrl = $rootScope.URL_ROOT + "/atteststatus";
    $http.get(getUrl).success(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {

            $scope.reg.mobile = data.entity.mobile;
            if (data.entity.emailFlg != 2) {
                $scope.reg.email = data.entity.email;
            }
            $scope.reg.realName = data.entity.realName;
            $scope.reg.idCard = data.entity.idCard;
            $scope.entity = data.entity;
        } else {
            $scope.msg = data.msg;
        }
    }).error(function(data, status) {
        if (checkResponse($rootScope, $scope, data)) {}
    });
}

///身份认证验证
app.controller('AttestController', ['$rootScope', '$scope', '$http', '$routeParams', '$location', '$sce', 'GlobalBorrowInfo',

    function($rootScope, $scope, $http, $routeParams, $location, $sce, borrow) {


        $scope.reg = {};
        $scope.entity = {};
        $scope.iderror = false;

        $scope.getSmsVerifyCode = function(type) {
            $scope.smsErrorStatus = false;
            var mobile = $scope.reg.mobile;

            if (!isEmpty(type) && type == 0) {
                SendSms($rootScope, $http, $scope, null);
            } else {
                if (isEmpty($scope.reg.mobile) || !(/^1[3|4|5|8|7][0-9]\d{4,8}$/.test(mobile))) {
                    $scope.smsErrorStatus = true;
                    return false;
                }
                SendSms($rootScope, $http, $scope, mobile);
            }
        };
        $scope.verifySms = function() {
            var mobile = $scope.reg.mobile;
            var code = $scope.reg.smsVerify;

            $scope.verifySmsError = false;
            if (isEmpty(mobile) || isEmpty(code)) {
                $scope.verifySmsError = true;
                return;
            }
            var checkUrl = $rootScope.URL_ROOT + "/verifySmsCode?mobile=" + mobile + "&code=" + code;
            $http.get(checkUrl).success(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {
                    getAttestStatus($rootScope, $http, $scope);
                }
            }).error(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {}
            });
        };


        $scope.changeEmail = function() {
            $scope.reg.email = "";
            $scope.entity.emailFlg = 0;
        }

        $scope.getEmailVerifyCode = function() {
            $scope.emailVerifyError = false;
            var email = $scope.reg.email;
            if (!checkIsEmail(email)) {
                $scope.emailVerifyError = true;

                $rootScope.Ui.turnOn('showinfo');
                $scope.msg = "请检查邮箱输入是否有误";
                $scope.title = "请检查";
                return;
            }
            var code = $scope.reg.smsEmailVerify;
            var url = $rootScope.URL_ROOT + "/attestemail?email=" + encodeURIComponent(email);
            if (!isEmpty(code)) {
                url += "&code=" + code;
            }
            var btn = document.getElementById("btnEmailVerify");
            var btnElement = angular.element(btn);

            curCount = count;
            //设置button效果，开始计时
            btnElement.attr("disabled", "true");
            btnElement.css("background-color", "gray");
            btnElement.val(curCount + "秒后重试");
            InterValObj = window.setInterval(SetEmailTime, 1000); //启动计时器，1秒执行一次

            $http.get(url).success(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {
                    getAttestStatus($rootScope, $http, $scope);
                }
            }).error(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {}
            });
        };

        $scope.verifyIdCard = function() {

            var name = $scope.reg.realName;
            var card = $scope.reg.idCard;

            $scope.realNameError = false;
            $scope.idCardError = false;

            var nameCheck = isValiName(name);

            if ("" != nameCheck) {
                $scope.realNameError = true;

                $rootScope.Ui.turnOn('showinfo');
                $scope.msg = nameCheck;
                $scope.title = "请检查";
                return;
            }

            var cardCheck = isCardID(card);

            if ("" != cardCheck) {
                $rootScope.Ui.turnOn('showinfo');
                $scope.msg = cardCheck;
                $scope.title = "请检查";
                return;
            }


            var cardUrl = $rootScope.URL_ROOT + "/attestrealname?name=" + name + "&card=" + card;
            $http.get(cardUrl).success(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {
                    getAttestStatus($rootScope, $http, $scope);

                    var channelBorrowId = (!isEmpty(borrow) && !isEmpty(borrow.borrowId)) ? borrow.borrowId : ((!isEmpty(localStorage) && !isEmpty(localStorage.getItem("CHANNEL_BORROWID")) ? localStorage.getItem("CHANNEL_BORROWID") : null));

                    if (!isEmpty(channelBorrowId)) {

                        if (!isEmpty(localStorage)) {
                            localStorage.removeItem("CHANNEL_BORROWID");
                        }
                        if (!isEmpty(borrow)) {
                            borrow.borrowId = null;
                        }

                        $location.url("borrowmed?id=" + channelBorrowId);
                    }

                }
            }).error(function(data, status) {
                if (checkResponse($rootScope, $scope, data)) {}
            });
        };
        getAttestStatus($rootScope, $http, $scope);
    }
]);

app.directive('fading', ['$timeout', '$location',
    function($timeout, $location) {
        return {
            restrict: "A",
            link: function() {
                $timeout(function() {
                    $location.url("default");
                }, 5000);
            }
        };
    }
]);

function loadAwardInfo($rootScope, $scope, $http, url) {

    $rootScope.loading = true;
    $http.get(url).success(function(response) {
        if (checkResponse($rootScope, $scope, response)) {
            if (!isEmpty($scope.records) && Array.isArray($scope.records)) //列表中已有元素
            {
                var list = response.list;
                //20160524将循环遍历改成concat
                // list.forEach(function(item, index, array) {
                //     $scope.records.push(item);
                // });
                $scope.records = $scope.records.concat(list);
            } else {
                $scope.records = response.list;
            }
        }
    }).error(function(response, status, headers, config) {
        checkResponse($rootScope, $scope, response);
    });
}
//中奖信息查询
app.controller('AwardInfoController', ['$rootScope', '$scope', '$http', '$routeParams',
    function($rootScope, $scope, $http, $routeParams) {
    	
        setDefaultValue($scope, $rootScope);
        var ps = $rootScope.pageSize;
        var url = $rootScope.URL_ROOT + "/awardinfo?pi=" + $scope.currentPage + "&ps=" + ps;

        $scope.loadMore = function(t) {
            if ($scope.currentPage < $scope.totalPageCount) {
                $scope.currentPage = $scope.currentPage + 1;
                var url = $rootScope.URL_ROOT + "/awardinfo?pi=" + $scope.currentPage + "&ps=" + ps;
                //列表性能会不会有问题
                loadAwardInfo($rootScope, $scope, $http, url);
            } else {
                //TODO:提示没有更多的加载项
            }
        };

        if (isEmpty($scope.records)) {
            loadAwardInfo($rootScope, $scope, $http, url);
        }

    }
]);

app.controller('adinfoController', ['$scope', function($scope) {
    $scope.draw = function() {
        window.location = "/m/luck_draw/index.html";
    };
}]);

app.directive('fading', ['$timeout', '$location',
    function($timeout, $location) {
        return {
            restrict: "A",
            link: function() {
                $timeout(function() {
                    $location.url("default");
                }, 5000);
            }
        };
    }
]);

app.controller('changepswController', ['$scope', '$http', '$location', '$rootScope',
    function($scope, $http, $location, $rootScope) {

        $scope.validateStr = SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();


        $scope.form1 = {
            "oldPwd": "",
            "pwd": "",
            "againPwd": "",
            "type": 0
        };
        $scope.form2 = {
            "pwd": "",
            "oldPwd": "",
            "againPwd": "",
            "validateCode": "",
            "type": 1
        };
        $scope.form3 = {
            "oldPwd": "",
            "pwd": "",
            "againPwd": "",
            "validateCode": "",
            "type": 2
        };
        var changepsw = function(data, tab) {
            $http.post($rootScope.URL_ROOT + '/changepwd', JSON.stringify(data))
                .success(function(responseData) {
                    if (responseData.msg == '请登录') {

                        $location.url("login");
                    } else if (responseData.status) {
                        if (tab === 1) {
                            $scope.show1 = true;
                            $scope.msg1 = responseData.entity;
                        } else if (tab === 2) {
                            $scope.show2 = true;
                            $scope.msg2 = responseData.entity;
                        } else {
                            $scope.show3 = true;
                            $scope.msg3 = responseData.entity;
                        }
                    } else {
                        if (tab === 1) {
                            $scope.show1 = true;
                            $scope.msg1 = responseData.msg;
                        } else if (tab === 2) {
                            $scope.show2 = true;
                            $scope.msg2 = responseData.msg;
                        } else {
                            $scope.show3 = true;
                            $scope.msg3 = responseData.msg;
                        }
                    }
                })
                .error(function(data) {});
        }
        $scope.confirm = function(tab) { //修改密码
            if (1 === tab) {
                changepsw($scope.form1, 1);
            } else if (2 === tab) {
                changepsw($scope.form2, 2);
            } else if (3 === tab) {
                changepsw($scope.form3, 3);
            }
        };
        $scope.drawImage = function() {
            $scope.msg1 = false;
            $scope.msg2 = false;
            $scope.msg3 = false;
            $scope.show1 = false;
            $scope.show2 = false;
            $scope.show3 = false;
            $("#btnSubmit1").removeAttr("disabled");
            $("#btnSubmit2").removeAttr("disabled");
            drawVerifyImg();

        };
    }
]);
app.controller('payrecordController', ['$scope',
    function($scope) {

        //交易
        $scope.pays = [{
            "date": "2015年4月",
            "dataArray": [{
                "logo": "img/baofu-logo.jpg",
                "paytype": "宝付",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付完成"
            }, {
                "logo": "img/guofubao-logo.jpg",
                "paytype": "国付宝",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付中止"
            }, {
                "logo": "img/huichao-logo.jpg",
                "paytype": "汇潮",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付失败"
            }, {
                "logo": "img/baofu-logo.jpg",
                "paytype": "宝付",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付完成"
            }, {
                "logo": "img/huichao-logo.jpg",
                "paytype": "汇潮",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付完成"
            }]
        }, {
            "date": "2015年3月",
            "dataArray": [{
                "logo": "img/baofu-logo.jpg",
                "paytype": "宝付",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付完成"
            }, {
                "logo": "img/guofubao-logo.jpg",
                "paytype": "国付宝",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付中止"
            }, {
                "logo": "img/huichao-logo.jpg",
                "paytype": "汇潮",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付失败"
            }, {
                "logo": "img/baofu-logo.jpg",
                "paytype": "宝付",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付完成"
            }, {
                "logo": "img/huichao-logo.jpg",
                "paytype": "汇潮",
                "paydate": "2015-01-26",
                "amount": 1032,
                "success": "支付完成"
            }]
        }]
    }
]);

app.controller('bindbcCtrl', ['$scope', '$rootScope', '$http', '$location', 'GlobalBorrowInfo',
    //获取银行卡信息，若已经绑定银行卡了，直接跳转银行卡列表
    function($scope, $rootScope, $http, $location, borrow) {
        $http.get($rootScope.URL_ROOT + "/channel").success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {

                if (response.entity&&response.entity.cards&&response.entity.cards.length) {
                    $location.url("banklist");
                }
            }
        }).error(function(response, status, headers, config) {
            //console.log(response);
        });


        $http.get($rootScope.URL_ROOT + '/atteststatus')
            .success(function(responseData) {
                if (!responseData || !responseData.status || !responseData.entity) {
                    $location.url("login");
                } else {
                    with(responseData.entity) {
                        if (idFlg == 0 || mobileFlg == 0) {
                            $location.url("attest");
                        } else {
                            $scope.form1.username = realName;
                        }
                    }

                }

            });
        $scope.form1 = {
            "username": "",
            "cardnum": ""
        };

        $scope.form2 = {
            "cardtype": "2",
            "province": "1",
            "city": "1",
            "depositbank": ""
        };
        $scope.form3 = {
            "validcode": ""
        };

        $scope.banks = [{
            "no": 62,
            "name": "中国建设银行"
        }, {
            "no": 59,
            "name": "中国交通银行"
        }, {
            "no": 71,
            "name": "招商银行"
        }, {
            "no": 78,
            "name": "中国工商银行"
        }, {
            "no": 79,
            "name": "广发银行"
        }, {
            "no": 80,
            "name": "华夏银行"
        }, {
            "no": 81,
            "name": "平安银行"
        }, {
            "no": 82,
            "name": "浦发银行"
        }, {
            "no": 83,
            "name": "兴业银行 "
        }, {
            "no": 84,
            "name": "光大银行"
        }, {
            "no": 85,
            "name": "民生银行"
        }, {
            "no": 86,
            "name": "农业银行"
        }, {
            "no": 87,
            "name": "中国银行"
        }, {
            "no": 88,
            "name": "邮政"
        }, {
            "no": 89,
            "name": "中信银行"
        }, {
            "no": 90,
            "name": "中国银行"
        }];

        $scope.step1 = true;
        $scope.step2 = false;
        $scope.step3 = false;

        $scope.confirm = function(step) {
            if (1 == step) {
                $scope.step1 = false;
                $scope.step2 = true;
            } else if (2 == step) {
                $scope.step2 = false;
                $scope.step3 = true;
            } else if (3 == step) {
                with($scope) {
                    var data = {
                        "bankCode": form2.cardtype,
                        "branck": form2.depositbank,
                        "cardId": form1.cardnum,
                        "city": $("#city").val(), //form2.city,
                        "province": form2.province,
                        "validateCode": form3.validcode
                    };
                };
                $http.post($rootScope.URL_ROOT + '/bindcard', data)
                    .success(function(responseData) {
                        //TODO 绑定银行卡列表
                        if (responseData.status)
                            var channelBorrowId = (!isEmpty(borrow) && !isEmpty(borrow.borrowId)) ? borrow.borrowId : ((!isEmpty(localStorage) && !isEmpty(localStorage.getItem("CHANNEL_BORROWID")) ? localStorage.getItem("CHANNEL_BORROWID") : null));
                        if (!isEmpty(channelBorrowId)) {

                            if (!isEmpty(localStorage)) {
                                localStorage.removeItem("CHANNEL_BORROWID");
                            }
                            if (!isEmpty(borrow)) {
                                borrow.borrowId = null;
                            }

                            $location.url("borrowmed?id=" + channelBorrowId);
                            return;
                        } else {
                            $location.url("banklist");
                            return;
                        }
                        $scope.msg = responseData.msg;
                    });
            } else if (4 == step) {
                $scope.step1 = true;
                $scope.step2 = false;
            } else if (5 == step) {
                $scope.step2 = true;
                $scope.step3 = false;
            }
        };
        //短信验证码---------------------------------------------(修改成指令)-------------------
        $scope.btnmsg = "获取手机验证码";
        $scope.disable = true;
        $scope.sendmsg = function() {

                var flag = true;
                var time = 60;
                if ($scope.disable) {
                    $scope.disable = false;
                    //发送短信
                    SendSms($rootScope, $http, $scope, $scope.form1.phone);
                    var timer = setInterval(function() {
                        if (time > 0) {
                            time--;
                            $scope.$apply(function() {
                                $scope.btnmsg = time + '秒 后重新发送';
                                $scope.disable = false;
                            });
                        } else {
                            $scope.$apply(function() {
                                $scope.btnmsg = "获取手机验证码";
                                $scope.disable = true;
                            });

                            clearInterval(timer);
                        }
                    }, 1000);

                } else {
                    //TODO 点击过了
                }
            }
            //短信验证码---------------------------------------------(修改成指令)-------------------
    }
]);
//----------------------------------二级联动下拉选项twolinkage指令---start----------------------------
app.directive('twolinkage', ['$http', function($http) {

        return {
            restrict: 'A',
            templateUrl: "twolinkage.tpl",
            replace: true,
            link: function(scope, element, attrs) {
                var init = function(responseData) {
                    for (var i = 0; i < responseData.length; i++) {
                        with(element.children()[0]) { //便利省
                            length = responseData.length;
                            options[i].text = responseData[i].name;
                            options[i].value = responseData[i].no;
                        }
                    }
                    with(element.children()[1]) { //遍历市
                        length = responseData[0].Array.length;
                        options[0].text = responseData[0].Array[0].name;
                        options[0].value = responseData[0].Array[0].no;
                    }
                };
                $http({
                    method: 'GET',
                    url: 'twolinkage.json'
                }).
                success(function(responseData) {
                    init(responseData);
                    element.children()[0].onchange = function() {
                        with(element.children()[0]) {
                            var provinceid = options[selectedIndex].value;
                        }
                        for (var i = 0; i < responseData.length; i++) {
                            if (responseData[i].no == provinceid) {
                                with(element.children()[1]) {
                                    length = responseData[i].Array.length;
                                    for (var j = 0; j < responseData[i].Array.length; j++) {
                                        options[j].text = responseData[i].Array[j].name;
                                        options[j].value = responseData[i].Array[j].no;
                                    }
                                }
                            }
                        }
                    };
                });
            }
        }
    }])
    //----------------------------------二级联动下拉选项twolinkage指令---end----------------------------
    //主页点击bar
app.directive('carousel', ['$drag',
    function($drag) {
        return {
            restrict: 'A',
            transclude: false,
            link: function(scope, element, attrs) {

                scope.carousel = function() {
                    if (scope.left == 0) {
                        scope.carousel_left();
                        scope.left++;
                    } else if (scope.left == 1 && scope.flag) {
                        scope.carousel_left();
                        scope.left++;
                        scope.flag = false;
                    } else if (scope.left == 1 && !scope.flag) {
                        scope.carousel_right();
                        scope.left--;
                        scope.flag = true;
                    } else if (scope.left == 2) {
                        scope.carousel_right();
                        scope.left--;
                    }
                };
                scope.carousel_left = function() {
                    $('div[carousel]>div').animate({
                        right: "+=100%"
                    }, 2000, function() {
                        $('li.current-li').removeClass('current-li').next('li').addClass('current-li');
                    });
                }
                scope.carousel_right = function() {
                    $('div[carousel]>div').animate({
                        right: "-=100%"
                    }, 2000, function() {
                        $('li.current-li').removeClass('current-li').prev('li').addClass('current-li');
                    });
                }
                scope.timer = setInterval(scope.carousel, 15000);
                //当dom元素被移除时，移除计时器
                scope.$on(
                    "$destroy",
                    function(event) {
                        clearInterval(scope.timer);
                    }
                );
            }
        };
    }
]);
// 找回密码--------------------------


app.controller('findpswCtrl', ['$scope', '$rootScope', '$http', '$location', '$routeParams',
    function($scope, $rootScope, $http, $location, $routeParams) {
        //参数获取
        var channel = $routeParams.channel;
        var platUsername = $routeParams.platUsername;
        var account = $routeParams.account;

        $scope.form1 = {
            phone: "",
            validcode: ""
        }
        $scope.form2 = {
            psw: "",
            repsw: ""
        }

        $scope.validateStr = SERVER_ADDRESS + "/api/verify?" + (new Date).getTime();

        $http.get($rootScope.URL_ROOT + "/querysmsstatus").success(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {
                $scope.validate = data.entity;
            }
        }).error(function(data, status) {
            if (checkResponse($rootScope, $scope, data)) {}
        });


        $scope.drawImg = function() {
            drawVerifyImg();
        };

        $scope.btnmsg = "获取手机验证码";
        $scope.disable = true;

        //发送短信
        $scope.sendmsg = function() {

            var flag = true;
            var time = 30;
            if ($scope.disable) {
                $scope.disable = false;

                if ($scope.validate == 1 && isEmpty($scope.form1.imgVerifyCode)) {
                    return;
                }

                //发送短信
                SendSms($rootScope, $http, $scope, $scope.form1.phone, "r", $scope.form1.imgVerifyCode);
                //发送号码到服务器
                $http.get($rootScope.URL_ROOT + "/queryuserbymobile?tel=" + $scope.form1.phone)
                    .success(function(responseData) {

                        if (responseData.status && responseData.msg === '请输入用户名') {
                            $scope.msg = '请输入用户名';
                        } else if (!responseData.status) {
                            $scope.msg = '绑定手机不正确';
                        } else {
                            $scope.userId = responseData.entity;
                        }
                    });

                var timer = setInterval(function() {
                    if (time > 0) {
                        time--;
                        $scope.$apply(function() {
                            $scope.btnmsg = time + 's 后重新发送';
                            $scope.disable = false;
                        });
                    } else {
                        $scope.$apply(function() {
                            $scope.btnmsg = "获取手机验证码";
                            $scope.disable = true;
                        });
                        clearInterval(timer);
                    }
                }, 1000);

            } else {
                //TODO 点击过了

            }
        };
        $scope.step2 = false;
        //修改密码
        $scope.confirm = function(num) {
            var requestData = {
                "pwd": $scope.form2.psw,
                "againPwd": $scope.form2.repsw,
                "type": 0,
                "userId": $scope.userId,
                "tel": $scope.form1.phone
            };
            if (num === 1) {
                //TODO 验证短信验证码和手机数据到服务

                $http.get($rootScope.URL_ROOT + "/verifySmsCode?mobile=" + $scope.form1.phone + "&code=" + $scope.form1.validcode)
                    .success(function(responseData) {

                        if (responseData.status) {
                            //验证成功
                            $scope.step2 = true;
                        } else {
                            $scope.msg = responseData.msg;
                            $scope.step2 = false;
                        }
                    });

                $http.get($rootScope.URL_ROOT + "/querysmsstatus").success(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {
                        $scope.validate = data.entity;
                    }
                }).error(function(data, status) {
                    if (checkResponse($rootScope, $scope, data)) {}
                });

            } else { //TODO 修改密码
                $http.post($rootScope.URL_ROOT + '/changepwddirect', JSON.stringify(requestData))
                    .success(function(resposeDate) {

                        if (resposeDate.status) {
                            $scope.msg = resposeDate.entity;
                            $scope.url = "/login";
                            if (!isEmpty(channel)) { //分别判断其获取的参数是否为空
                                $scope.url = "/login?channel=" + channel;

                                if (!isEmpty(platUsername)) { //不为空的话直接+参数=空
                                    $scope.url += "&platUsername=" + platUsername;
                                }
                                if (!isEmpty(account)) {
                                    $scope.url += "&account=" + account;
                                }
                            }
                            $scope.Ui.turnOn('dialog');
                        } else {
                            $scope.msg = resposeDate.msg;
                            $scope.Ui.turnOn('dialog');
                        }
                    });
            }
        };
        $scope.close = function() {

            if ($scope.url)
                $location.url($scope.url);
        };
    }
]);


//确认充值
app.controller('confrecCtrl', ['$rootScope', '$scope', '$http', '$location', 'GlobalBorrowInfo',
    function($rootScope, $scope, $http, $location, borrow) {
        /*绑定多卡---------------start---------------------------------
        if(!$rootScope.bankcard){
            $location.url("/recharge");
        }
        $scope.bankCard = $rootScope.bankcard;
        绑定多卡-----------------end----------------------------------*/
        //绑定一卡---------------start--------------------------------
        $scope.bankcard = {
            "id": "",
            "bankCode": "",
            "bankName": "",
            "bankType": "",
            "branck": "",
            "cardId": "",
            "nickName": "",
            "type": 0,
            "userId": ""
        };

        var url = $rootScope.URL_ROOT + "/channel";
        $http.get(url).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {
                if (!response || !response.status || !response.entity||!response.entity.cards||!response.entity.cards.length) {
                    $location.url("/bindbc");
                } else {
                    $scope.bankCard = response.entity.cards[0];
                }
            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
        });

        //绑定一卡--------------end-----------------------------------
        //充值金额
        $scope.amout = $rootScope.amout;
        var entity = {
            "cardId": $scope.bankcard.id,
            "bankId": '2',
            "rechargeAmount": $rootScope.amout,
            "rechargeOrderId": "",
            "rechargeContinue": "0"
        };
        $http.post($rootScope.URL_ROOT + "/recharge", entity)
            .success(function(data, status) {
                $scope.value = data.entity;
            }).error(function(data, status) {

            });
    }
]);

//把null转为需要的值
app.filter('isnull', [function() {
    return function(input, output) {
        if (input) {
            return input;
        } else {
            return output;
        }
    }
}]);

//把指定值转为需要的值
app.filter('replacewith', [function() {
    return function(input, output1, output2) {
        if (input === output1) {
            return output2;
        } else {
            return input;
        }
    }
}]);

//聚金券列表
app.controller('ticketCtrl', ['$scope', '$location', '$rootScope', '$http',
    function($scope, $location, $rootScope, $http) {
        $scope.type = 1;
        var url = $rootScope.URL_ROOT + '/ticket?type=' + $scope.type + '&pi=1&ps=5';

        $scope.reloadData = function(num) {
            $scope.type = num;
            url = $rootScope.URL_ROOT + '/ticket?type=' + num + '&pi=1&ps=5';
        };

        $scope.$watch('type', function() {
            $http.get(url).success(function(responseData) {
                if (responseData.list) {
                    if (responseData.list.length == 0)
                        $scope.list = null;
                    else
                        $scope.list = responseData.list;
                }
            });
        });
    }
]);


//红包组概况
app.controller('myawardCtrl', ['$scope', '$location', '$rootScope', '$http', '$sce',
    function($scope, $location, $rootScope, $http, $sce) {

        var url = $scope.URL_ROOT + "/querycoupon";
        $scope.coin = 0;
        $scope.tickCount = 0;
        $http.get(url).success(function(response) {
            $scope.coin = convertToFloat(response.entity.coin).toFixed(2);
            $scope.ticketCount = convertToFloat(response.entity.ticketCount).toFixed(0);
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
        });

    }
]);

function formatRedMemo($sce, msg) {
    if (isEmpty(msg) || isEmpty(msg.memo)) {
        return msg;
    }
    msg.memo = $sce.trustAsHtml(msg.memo);
    return msg;
}
//红包
app.controller('myredsCtrl', ['$scope', '$location', '$rootScope', '$http', '$sce',
    function($scope, $location, $rootScope, $http, $sce) {
        setDefaultValue($scope, $rootScope);
        var ps = $rootScope.pageSize;

        $scope.url = '/getGraphCoinList';
        $scope.hidemore = false;
        $scope.reloadData = function(url) {
            $scope.url = url;
        };

        $scope.$watch('url', function() {
            setDefaultValue($scope, $rootScope);
            $scope.list = [];
            getData($scope.url, 1, ps);
        });

        var getData = function(url, pi, ps) {
            $http.get($rootScope.URL_ROOT + url + "?pi=" + pi + "&ps=" + ps).success(function(responseData) {
                if (checkResponse($rootScope, $scope, responseData)) {
                    var list = responseData.list;
                    if (!isEmpty($scope.list) && Array.isArray($scope.list)) //列表中已有元素
                    {
                        list.forEach(function(item, index, array) {
                            $scope.list.push(formatRedMemo($sce, item));
                        });
                    } else {
                        $scope.list = [];
                        list.forEach(function(item, index, array) {
                            $scope.list.push(formatRedMemo($sce, item));
                        });
                    }
                    if ($scope.totalPageCount == 0 || $scope.totalPageCount == $scope.currentPage) {
                        $scope.hidemore = true;
                    }
                }
            });
        }

        $scope.loadmore = function() {
            if ($scope.currentPage < $scope.totalPageCount) {
                $scope.currentPage = $scope.currentPage + 1;
                getData($scope.url, $scope.currentPage, ps);
            }
        };
        $scope.getdesc = function(insDate, amount, id, phoneNumber) {
            $location.url("/reddesc?insDate=" + insDate + "&amount=" + amount + "&id=" + id + "&phonenum=" + phoneNumber);
        };
    }
]);


//红包详情
app.controller('reddescCtrl', ['$scope', '$routeParams', '$rootScope', '$http',
    function($scope, $routeParams, $rootScope, $http) {
        $scope.insDate = $routeParams.insDate;
        $scope.amount = $routeParams.amount;

        var id = $routeParams.id; //红包id
        var phonenum = $routeParams.phonenum; //手机号


        $scope.div_show = false;

        $scope.show = function() {
            $scope.div_show = true;
        }
        $scope.hide = function() {
            $scope.div_show = false;
        }

        //TODO 添加分享事件
        var shareUrl = 'https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx30235c7115ff82d5&redirect_uri=http://m.jujinziben.com/WeiXinServer/redball?id=' + id + '&phonenum=' + phonenum + '&response_type=code&scope=snsapi_userinfo&state=3&connect_redirect=1#wechat_redirect';

        var url = $rootScope.SERVER + "/WeiXinServer/ShareServlet?url=" + location.href; //encodeURIComponent(userUrl);
        var wechatshare = function(shareUrl) {

            $http.get(url).success(function(data, status) {
                wx.config({
                    debug: false,
                    appId: 'wx30235c7115ff82d5',
                    timestamp: data.timestamp,
                    nonceStr: data.noncestr,
                    signature: data.signature,
                    jsApiList: ['onMenuShareAppMessage', 'onMenuShareTimeline']
                });
                wx.ready(function() {
                    // 获取“分享给朋友”按钮点击状态及自定义分享内容接口
                    wx.onMenuShareAppMessage({
                        title: '6.26聚金周年庆，百万红包大放送', // 分享标题
                        desc: '百万红包大放送，这次玩大了', // 分享描述
                        link: shareUrl,
                        imgUrl: 'http://m.jujinziben.com/wechat/images/title.png', // 分享图标
                        type: 'link', // 分享类型,music、video或link，不填默认为link
                        success: function(res) {}
                    });
                    // 获取“分享朋友圈”按钮点击状态及自定义分享内容接口
                    wx.onMenuShareTimeline({
                        title: '6.26聚金周年庆，百万红包大放送',
                        desc: '百万红包大放送，这次玩大了',
                        link: shareUrl,
                        imgUrl: 'http://m.jujinziben.com/wechat/images/title.png',
                        success: function(res) {}
                    });
                });
            }).error(function(data) {
            });

        }
        wechatshare(shareUrl);


    }
]);

//根据聚金券切换壁纸
app.filter('cor', [function() {
    return function(input) {
        switch (input) {
            case 0.5:
                return 'orange';
                break;
            case 1:
                return 'blue';
                break;
            case 2:
                return 'green';
                break;
            default:
                return 'orange';
                break;
        }
    }
}]);


//根据聚金券和聚金币的
app.filter('rewardtype', [function() {
    return function(input) {
        switch (input) {
            case 0:
                return 'gray';
                break;
            case 1:
                return 'orange';
                break;
            default:
                return 'orange';
                break;
        }
    }
}]);

app.filter('rewardimg', [function() {
    return function(input) {
        switch (input) {
            case 0:
                return 'gray';
                break;
            case 1:
                return 'orange';
                break;
            default:
                return 'orange';
                break;
        }
    }
}]);

app.controller('setaccCtrl', ['$scope', '$rootScope', '$http', '$location', function($scope, $rootScope, $http, $location) {
    $scope.logout = function() {
        var logoutUrl = $rootScope.URL_ROOT + "/logout";
        $http.get(logoutUrl).success(function(response) {
            if (checkResponse($rootScope, $scope, response)) {
                $location.url("/");
            }
        }).error(function(response, status, headers, config) {
            checkResponse($rootScope, $scope, response);
            //Handler error
        });
    }
}]);

function loadChance($rootScope, $scope, $http, url) {
    $rootScope.loading = true;
    $http.get(url).success(function(response) {
        if (checkResponse($rootScope, $scope, response)) {
            var list = response.list;
            if (!isEmpty($scope.chances) && Array.isArray($scope.chances)) //列表中已有元素
            {
                $scope.chances= $scope.chances.concat(list);
            } else {
                $scope.chances = [];
                $scope.chances=$scope.chances.concat(list);
            }
        }
    }).error(function(response, status, headers, config) {
        checkResponse($rootScope, $scope, response);
    });
}


//红包分享
app.controller('chanceController', ['$scope', '$rootScope', '$routeParams', '$http', '$location', function($scope, $rootScope, $routeParams, $http, $location) {

    setDefaultValue($scope, $rootScope);
    var ps = $rootScope.pageSize;
    var url = $rootScope.URL_ROOT + "/queryCoinChance?phoneNumber=&pi=" + $scope.currentPage + "&ps=" + ps;

    $scope.loadMore = function(t) {
        if ($scope.currentPage < $scope.totalPageCount) {
            $scope.currentPage = $scope.currentPage + 1;
            url = $rootScope.URL_ROOT + "/queryCoinChance?phoneNumber=&pi=" + $scope.currentPage + "&ps=" + ps;
            //列表性能会不会有问题
            loadChance($rootScope, $scope, $http, url);
        } else {
            //TODO:提示没有更多的加载项
        }
    };

    if (typeof($scope.chances) == "undefined" || $scope.chances == null) {
        loadChance($rootScope, $scope, $http, url);
    }
}]);


//红包分享
app.controller('chancedescController', ['$scope', '$rootScope', '$routeParams', '$http', '$location', function($scope, $rootScope, $routeParams, $http, $location) {

    var url = $rootScope.URL_ROOT + "/queryCoinChanceByRoot?id=" + $routeParams.id + "&phoneNumber=" + $routeParams.phonenum;

    $http.get(url).success(function(response) {
        if (checkResponse($rootScope, $scope, response)) {
            $scope.entity = response.entity;
        }
    }).error(function(response, status, headers, config) {
        checkResponse($rootScope, $scope, response);
    });

    $scope.div_show = false;

    $scope.show = function() {
        if ($("#masking").length > 0) {
            $("#masking").css('display', 'block');
        } else {
            var masking = document.createElement("div");
            masking.className = "masking-02";
            masking.style.display = "block";
            masking.id = "masking";

            var f_img = document.createElement("div");
            f_img.className = "f-img00";
            masking.appendChild(f_img);

            $(document.body).append(masking);

            $(masking).click(function() {
                $("#masking").css('display', 'none');
            });
        }
    }

    $scope.hide = function() {
        $scope.div_show = false;
    }

    //TODO 添加分享事件

    var id = $routeParams.id; //红包id
    var phonenum = $routeParams.phonenum; //手机号


    var shareUrl = 'https://open.weixin.qq.com/connect/oauth2/authorize?appid=wx30235c7115ff82d5&redirect_uri=http://m.jujinziben.com/WeiXinServer/redball?id=' + id + '%26phonenum=' + phonenum + '&response_type=code&scope=snsapi_userinfo&state=3&connect_redirect=1#wechat_redirect';

    var url = $rootScope.SERVER + "/WeiXinServer/ShareServlet?url=" + location.href;
    var SUCCESS_URL = 'http://m.jujinziben.com/api/shareChance?recordId=' + id + '&phoneNumber=' + phonenum;
    var wechatshare = function(shareUrl) {
        $http.get(url).success(function(data, status) {
            wx.config({
                debug: false,
                appId: 'wx30235c7115ff82d5',
                timestamp: data.timestamp,
                nonceStr: data.noncestr,
                signature: data.signature,
                jsApiList: ['onMenuShareAppMessage', 'onMenuShareTimeline']
            });
            wx.ready(function() {
                // 获取“分享给朋友”按钮点击状态及自定义分享内容接口
                wx.onMenuShareAppMessage({
                    title: '聚金资本活动第三季', // 分享标题
                    desc: '聚金资本活动第三季', // 分享描述
                    link: shareUrl,
                    imgUrl: 'http://m.jujinziben.com/wechat/images/title.png', // 分享图标
                    type: 'link', // 分享类型,music、video或link，不填默认为link
                    success: function(res) {
                        console.log(res);
                        //$http.get(SUCCESS_URL);
                    }
                });
                // 获取“分享朋友圈”按钮点击状态及自定义分享内容接口
                wx.onMenuShareTimeline({
                    title: '聚金资本活动第三季',
                    desc: '聚金资本活动第三季',
                    link: shareUrl,
                    imgUrl: 'http://m.jujinziben.com/wechat/images/title.png',
                    success: function(res) {
                        console.log(res);
                        //$http.get(SUCCESS_URL);
                    }
                });
            });
        }).error(function(data) {});

    }
    wechatshare(shareUrl);
}]);



//西瓜理财注册
app.controller('XgMedController', ['$scope', '$rootScope', '$routeParams', '$http', '$location', 'baseService',
    function($scope, $rootScope, $routeParams, $http, $location, service) {

        if (!preMultiExec($scope)) return;
        service.initValue($scope);

        if ($routeParams.channel == "xglc") {

            if (!isEmpty($routeParams.account)) {

                var url = "";
                if (checkIsMobile($routeParams.account)) {
                    url = service.makeUrl("/queryuserbymobile?tel=" + $routeParams.account);
                } else {
                    url = service.makeUrl("/usercheck?id=" + $routeParams.account);
                }

                service.loadEntity(url, $scope, "entity", function(response) {

                    if (response.msg == "获取手机号对应的用户名失败，请重试" || response.msg == "该手机号在系统中不存在") {
                        url = service.makeUrl("/usercheck?id=" + $routeParams.account);
                        service.loadEntity(url, $scope, "entity", function(response) {
                            if (response.msg == "该手机号在系统中不存在" || $scope.entity == "0") {
                                $location.url("/register?account=" + $routeParams.account + "&returnUrl=" + $routeParams.returnUrl);
                            } else {
                                $location.url("/login?account=" + $routeParams.account + "&returnUrl=" + $routeParams.returnUrl);
                            }
                        });

                    } else {
                        if ($scope.entity == "0") {
                            $location.url("/xglcreg?account=" + $routeParams.account + "&returnUrl=" + $routeParams.returnUrl);
                        } else {
                            $location.url("/login?account=" + $routeParams.account + "&returnUrl=" + $routeParams.returnUrl);
                        }
                    }
                });
            }
        } else {
            $location.url("/login");
        }
    }
]);

//西瓜理财投资
app.controller('XgDisBorController', ['$scope', '$rootScope', '$routeParams', '$http', '$location', 'baseService',
    function($scope, $rootScope, $routeParams, $http, $location, service) {

        if (!preMultiExec($scope)) return;
        service.initValue($scope);

        var productCode = $routeParams.productCode;
        var channel = $routeParams.channel;
        var userAccessKey = $routeParams.userAccessKey;
        var xgOrderSn = $routeParams.xgOrderSn;
        var returnUrl = $routeParams.returnUrl;

        productCode = isEmpty(productCode) ? "" : productCode;
        channel = isEmpty(channel) ? "" : channel;
        userAccessKey = isEmpty(userAccessKey) ? "" : userAccessKey;
        xgOrderSn = isEmpty(xgOrderSn) ? "" : xgOrderSn;
        returnUrl = isEmpty(returnUrl) ? "" : returnUrl;

        var url = service.makeUrl("/xglcApi/xglcdisbor?productCode=" + productCode + "&channel=" + channel + "&userAccessKey=" + userAccessKey + "&xgOrderSn=" + xgOrderSn + "&returnUrl=" + returnUrl);

        service.loadEntity(url, $scope, "entity", function(response) {
            if (isEmpty($scope.entity)) {
                $location.url("/xglcreg");
            } else {
                $location.url($scope.entity + "&channel=xglc");
            }
        });
    }
]);

//西瓜理财投资
app.controller('XgTranController', ['$scope', '$rootScope', '$routeParams', '$http', '$location', 'baseService',
    function($scope, $rootScope, $routeParams, $http, $location, service) {

        if (!preMultiExec($scope)) return;
        service.initValue($scope);

        var isRegisted = $routeParams.isRegisted;
        var account = $routeParams.account;
        var userAccessKey = $routeParams.userAccessKey;
        var expireTime = $routeParams.expireTime;
        var sign = $routeParams.sign;


        var url = service.makeUrl("/xglcMonitor/reg?isRegisted=" + isRegisted + "&account=" + account + "&userAccessKey=" + userAccessKey + "&expireTime=" + expireTime + "&sign=" + sign);

        service.execAction($scope, url, function(object) {});
    }
]);

//西瓜理财投资
app.controller('XgTranBuyController', ['$scope', '$rootScope', '$routeParams', '$http', '$location', 'baseService',
    function($scope, $rootScope, $routeParams, $http, $location, service) {

        if (!preMultiExec($scope)) return;
        service.initValue($scope);

        var orderId = $routeParams.orderId;
        var tradeResultStatus = $routeParams.tradeResultStatus;
        var xgOrderSn = $routeParams.xgOrderSn;
        var sign = $routeParams.sign;

        var url = service.makeUrl("/xglcMonitor/buy?orderId=" + orderId + "&tradeResultStatus=" + tradeResultStatus + "&sign=" + sign);

        service.execAction($scope, url, function(object) {});
    }
]);

//绑定提现银行卡列表
app.controller('banklistCtrl', ['$rootScope', '$scope', '$http', '$location', 'baseService',
    function($rootScope, $scope, $http, $location, service) {

        var url = service.makeUrl("/bank");
        service.loadEntity(url, $scope, "bankCard");
        $scope.recharge = function() {
            $location.url("/recharge");
        };
    }
]);

//首页图片轮播
app.directive("slideBox",["$rootScope","$http",function($rootScope, $http){
	return {
		restrict: 'AE',
		template: '<div class="bd"><ul></ul></div><div class="hd"><ul></ul></div>',
		link: function(scope, iElement, iAttrs){
			var splashUrl = $rootScope.URL_ROOT + '/splash';
			$http.get(splashUrl).success(function(response) {
				if (checkResponse($rootScope, scope, response)) {
					var entity = response.entity;
					if(entity){
						//轮播图
						var imgList = entity.banners;
						var liList = "";
						for(var i=0;i<imgList.length;i++){
							liList += '<li><a target="_blank" href="'+imgList[i].url+'"><img src="'+imgList[i].img+'"></a></li>';
						}
						$(iElement).find("ul").html(liList);
						TouchSlide({
							slideCell:"#" + iAttrs.id,
							titCell:".hd ul", //开启自动分页 autoPage:true ，此时设置 titCell 为导航元素包裹层
							mainCell:".bd ul",
							effect:"leftLoop",
							interTime: 5000,//自动运行间隔
                            delayTime: 1000,//切换效果持续时间
							autoPage:true,//自动分页
							autoPlay:true //自动播放
						});
					}
				}
			}).error(function(response, status, headers, config) {
				checkResponse($rootScope, scope, response);
			});
		}
	}
}]);
//车贷产品介绍
app.directive("carProduct",function(){
    return{
        restrict: "AE",
        templateUrl:"/m/jujin/sc/car.html"
    }
})
//苹果贷产品介绍
app.directive("appleProduct",function(){
    return{
        restrict:"A",
        templateUrl:"/m/jujin/sc/apple.html"
    }
})
//房产抵押产品介绍
app.directive("fcdyProduct",function(){
    return{
        restrict:"A",
        templateUrl:"/m/jujin/sc/fcdy.html"
    }
})
//车分期产品介绍
app.directive("cfqProduct",function(){
    return{
        restrict:"A",
        templateUrl:"/m/jujin/sc/cfq.html"
    }
})
//三板贷产品介绍
app.directive("sbdProduct",function(){
    return{
        restrict:"A",
        templateUrl:"/m/jujin/sc/sbd.html"
    }
})